openapi: 3.0.0
info:
  title: API de Tienda
  version: 1.0.0
  description: Documentación de la API para la gestión de una tienda, incluyendo usuarios, carritos, clientes, kardex, mermas, productos, órdenes de compra, perecederos, proveedores y transacciones.
  contact:
    name: Tu Nombre
    email: tuemail@example.com
servers:
  - url: http://localhost:5000/api
    description: Servidor de desarrollo
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        address:
          type: string
        mobile_phone:
          type: string
        role_id:
          type: integer
        role:
          type: string
        created_at:
          type: string
          format: date-time
        status:
          type: string
      required:
        - username
        - password
        - email
        - first_name
        - last_name
        - role_id
    Supplier:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        contact:
          type: string
        phone:
          type: string
        email:
          type: string
        company_name:
          type: string
        tax_id:
          type: string
        address:
          type: string
        supplier_type:
          type: string
        status:
          type: string
      required:
        - name
        - contact
        - phone
        - email
        - company_name
        - tax_id
        - supplier_type
    Transaction:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        user_id:
          type: integer
        amount:
          type: number
        type:
          type: string
          enum: [cash, credit]
        invoice_number:
          type: string
        notes:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
    PurchaseOrder:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        supplier_id:
          type: integer
        quantity:
          type: integer
        order_date:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, processed, completed, cancelled]
        payment_type:
          type: string
          enum: [cash, credit, consignment]
        total_amount:
          type: number
        product_name:
          type: string
        supplier_name:
          type: string
      required:
        - product_id
        - supplier_id
        - quantity
    SupplierDebt:
      type: object
      properties:
        id:
          type: integer
        supplier_id:
          type: integer
        user_id:
          type: integer
        amount:
          type: number
        remaining_amount:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    DebtPayment:
      type: object
      properties:
        id:
          type: integer
        debt_id:
          type: integer
        amount:
          type: number
        payment_date:
          type: string
          format: date-time
    Consignment:
      type: object
      properties:
        id:
          type: integer
        supplier_id:
          type: integer
        user_id:
          type: integer
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        total_value:
          type: number
        sold_value:
          type: number
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ConsignmentItem:
      type: object
      properties:
        id:
          type: integer
        consignment_id:
          type: integer
        product_id:
          type: integer
        quantity_sent:
          type: integer
        quantity_sold:
          type: integer
        quantity_returned:
          type: integer
        quantity_delivered:
          type: integer
        price_at_time:
          type: number
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        actual_stock:
          type: integer
        min_stock:
          type: integer
        supplier_id:
          type: integer
        category_id:
          type: integer
      required:
        - name
        - price
        - supplier_id
    Cart:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        created_at:
          type: string
          format: date-time
      required:
        - customer_id
    CartItem:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
      required:
        - product_id
        - quantity
    CartItemDetailed:
      type: object
      properties:
        id:
          type: integer
        cart_id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
        price_at_time:
          type: number
        name:
          type: string
        price:
          type: number
      required:
        - cart_id
        - product_id
        - quantity
        - price_at_time
    Customer:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
    KardexEntry:
      type: object
      properties:
        product_id:
          type: integer
        movement_type:
          type: string
        quantity:
          type: integer
        date:
          type: string
          format: date-time
    Merma:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
        expiration_date:
          type: string
          format: date
    Perishable:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        expiration_date:
          type: string
          format: date
        stock:
          type: integer
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
paths:
  # --- Users ---
  /users/login:
    post:
      summary: Iniciar sesión de un usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        "200":
          description: Token JWT devuelto
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "401":
          description: Contraseña incorrecta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario no encontrado o inactivo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/register:
    post:
      summary: Registrar un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Usuario registrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Error en los datos enviados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      security:
        - bearerAuth: []
      description: Requiere rol 'admin'
      responses:
        "200":
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      tags:
        - Users
      security:
        - bearerAuth: []
      description: Requiere rol 'admin'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      responses:
        "200":
          description: Detalles del usuario
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Actualizar un usuario completamente
      tags:
        - Users
      security:
        - bearerAuth: []
      description: Requiere rol 'admin'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Actualizar parcialmente un usuario
      tags:
        - Users
      security:
        - bearerAuth: []
      description: Requiere rol 'admin'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                address:
                  type: string
                mobile_phone:
                  type: string
                role_id:
                  type: integer
      responses:
        "200":
          description: Usuario actualizado parcialmente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: No se proporcionaron datos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/delete/{id}:
    post:
      summary: Desactivar un usuario
      tags:
        - Users
      security:
        - bearerAuth: []
      description: Requiere rol 'admin'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      responses:
        "200":
          description: Usuario desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/User"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/me:
    get:
      summary: Obtener el usuario autenticado
      tags:
        - Users
      security:
        - bearerAuth: []
      description: Accesible por cualquier usuario autenticado
      responses:
        "200":
          description: Detalles del usuario autenticado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{userId}/suppliers/{supplierId}/debts:
    post:
      summary: Registrar una compra a crédito con un proveedor
      tags:
        - Debts
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
        - in: path
          name: supplierId
          required: true
          schema:
            type: integer
          description: ID del proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 1000.50
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      quantity:
                        type: integer
                      price:
                        type: number
      responses:
        "201":
          description: Deuda creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  debt:
                    $ref: "#/components/schemas/SupplierDebt"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario o proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{userId}/suppliers/{supplierId}/debts/{debtId}/payments:
    post:
      summary: Registrar un pago de una deuda
      tags:
        - Debts
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'cashier'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
        - in: path
          name: supplierId
          required: true
          schema:
            type: integer
          description: ID del proveedor
        - in: path
          name: debtId
          required: true
          schema:
            type: integer
          description: ID de la deuda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 500.25
      responses:
        "201":
          description: Pago registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  payment:
                    $ref: "#/components/schemas/DebtPayment"
        "400":
          description: Monto inválido o excede la deuda
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Deuda no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{userId}/debts:
    get:
      summary: Obtener todas las deudas de un usuario con proveedores
      tags:
        - Debts
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'cashier'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
      responses:
        "200":
          description: Lista de deudas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    supplier_id:
                      type: integer
                    user_id:
                      type: integer
                    amount:
                      type: number
                    supplier_name:
                      type: string
                    total_paid:
                      type: number
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{userId}/suppliers/{supplierId}/consignments:
    post:
      summary: Registrar una consignación
      tags:
        - Consignments
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
        - in: path
          name: supplierId
          required: true
          schema:
            type: integer
          description: ID del proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      quantity_sent:
                        type: integer
                end_date:
                  type: string
                  format: date
                  example: 2023-12-31
      responses:
        "201":
          description: Consignación creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  consignment:
                    $ref: "#/components/schemas/Consignment"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Usuario o proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{userId}/suppliers/{supplierId}/consignments/{consignmentId}/settle:
    post:
      summary: Liquidar una consignación
      tags:
        - Consignments
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'cashier'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
        - in: path
          name: supplierId
          required: true
          schema:
            type: integer
          description: ID del proveedor
        - in: path
          name: consignmentId
          required: true
          schema:
            type: integer
          description: ID de la consignación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      quantity_sold:
                        type: integer
      responses:
        "200":
          description: Consignación liquidada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  totalAmount:
                    type: number
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Consignación no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Cart ---
  /cart:
    post:
      summary: Crear un nuevo carrito para un cliente
      tags:
        - Cart
      security:
        - bearerAuth: []
      description: Requiere rol 'sales' o 'cashier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: integer
                  example: 1
              required:
                - customer_id
      responses:
        "201":
          description: Carrito creado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "400":
          description: Customer ID es requerido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /cart/items:
    post:
      summary: Añadir un producto al carrito
      tags:
        - Cart
      security:
        - bearerAuth: []
      description: Requiere rol 'sales' o 'cashier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_id:
                  type: integer
                  example: 1
                product_id:
                  type: integer
                  example: 5
                quantity:
                  type: integer
                  example: 2
                  default: 1
              required:
                - cart_id
                - product_id
      responses:
        "201":
          description: Producto añadido al carrito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItemDetailed"
        "400":
          description: Datos inválidos o stock insuficiente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Carrito o producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /cart/{id}:
    get:
      summary: Obtener el contenido de un carrito por ID
      tags:
        - Cart
      security:
        - bearerAuth: []
      description: Requiere rol 'sales' o 'cashier'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del carrito
      responses:
        "200":
          description: Detalles del carrito y sus ítems
          content:
            application/json:
              schema:
                type: object
                properties:
                  cart:
                    $ref: "#/components/schemas/Cart"
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CartItemDetailed"
        "400":
          description: ID del carrito inválido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /cart/{cartId}/items/{itemId}:
    delete:
      summary: Quitar un ítem del carrito
      tags:
        - Cart
      security:
        - bearerAuth: []
      description: Requiere rol 'sales' o 'cashier'
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: integer
          description: ID del carrito
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
          description: ID del ítem en el carrito
      responses:
        "200":
          description: Ítem eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  removedItem:
                    $ref: "#/components/schemas/CartItemDetailed"
                  updatedStock:
                    type: integer
        "400":
          description: IDs inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Carrito o ítem no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /cart/{id}/checkout:
    post:
      summary: Finalizar la compra de un carrito
      tags:
        - Cart
      security:
        - bearerAuth: []
      description: Requiere rol 'sales' o 'cashier'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del carrito
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_payment_method:
                  type: string
                  enum: [cash, credit]
                  example: cash
                user_id:
                  type: integer
                  example: 2
              required:
                - customer_payment_method
                - user_id
      responses:
        "200":
          description: Compra completada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  total_cost:
                    type: number
                  customer_payment_method:
                    type: string
                  transaction:
                    $ref: "#/components/schemas/Transaction"
        "400":
          description: Datos inválidos, carrito vacío o saldo insuficiente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Carrito o cliente no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Customers ---
  /customers:
    get:
      summary: Obtener todos los clientes
      tags:
        - Customers
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'sales'
      responses:
        "200":
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Crear un nuevo cliente
      tags:
        - Customers
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'sales'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "201":
          description: Cliente creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Kardex ---
  /kardex:
    get:
      summary: Obtener el kardex de inventario
      tags:
        - Kardex
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'inventory'
      responses:
        "200":
          description: Lista de movimientos de inventario
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/KardexEntry"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Mermas ---
  /mermas/check-expired:
    post:
      summary: Verificar productos vencidos y registrar mermas
      tags:
        - Mermas
      security:
        - bearerAuth: []
      description: Requiere rol 'admin'
      responses:
        "200":
          description: Mermas procesadas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  expired_products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Merma"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Products ---
  /products:
    get:
      summary: Obtener todos los productos
      tags:
        - Products
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'inventory'
      responses:
        "200":
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Crear un nuevo producto
      tags:
        - Products
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'inventory'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Purchase Orders ---
  /purchase-orders/products:
    post:
      summary: Crear un producto (relacionado con órdenes de compra)
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /purchase-orders/check-stock:
    get:
      summary: Verificar niveles de stock y crear órdenes de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      responses:
        "200":
          description: Órdenes de compra creadas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/PurchaseOrder"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /purchase-orders:
    post:
      summary: Crear una orden de compra manualmente
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrder"
      responses:
        "201":
          description: Orden de compra creada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrder"
        "400":
          description: Cantidad requerida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Producto o proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Obtener todas las órdenes de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      responses:
        "200":
          description: Lista de órdenes de compra
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PurchaseOrder"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /purchase-orders/{id}:
    get:
      summary: Obtener una orden de compra por ID
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la orden de compra
      responses:
        "200":
          description: Detalles de la orden de compra
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrder"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Orden de compra no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Actualizar una orden de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la orden de compra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrder"
      responses:
        "200":
          description: Orden de compra actualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrder"
        "400":
          description: Cantidad requerida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Orden de compra no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Eliminar una orden de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      description: Requiere rol 'admin'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la orden de compra
      responses:
        "200":
          description: Orden de compra eliminada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  purchaseOrder:
                    $ref: "#/components/schemas/PurchaseOrder"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Orden de compra no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /purchase-orders/{id}/process:
    post:
      summary: Procesar una orden de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la orden de compra
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_type:
                  type: string
                  enum: [cash, credit, consignment]
      responses:
        "200":
          description: Orden de compra procesada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrder"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Orden de compra no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Perishables ---
  /perishables:
    get:
      summary: Obtener productos perecederos
      tags:
        - Perishables
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'inventory'
      responses:
        "200":
          description: Lista de productos perecederos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Perishable"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Suppliers ---
  /suppliers:
    post:
      summary: Crear un proveedor
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier"
      responses:
        "201":
          description: Proveedor creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supplier"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Obtener todos los proveedores
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      responses:
        "200":
          description: Lista de proveedores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Supplier"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /suppliers/{id}:
    get:
      summary: Obtener un proveedor por ID
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor
      responses:
        "200":
          description: Detalles del proveedor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supplier"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Actualizar un proveedor completamente
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier"
      responses:
        "200":
          description: Proveedor actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supplier"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Actualizar parcialmente un proveedor
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'purchasing'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                contact:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                company_name:
                  type: string
                tax_id:
                  type: string
                address:
                  type: string
                supplier_type:
                  type: string
                status:
                  type: string
      responses:
        "200":
          description: Proveedor actualizado parcialmente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supplier"
        "400":
          description: No se proporcionaron datos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /suppliers/delete/{id}:
    post:
      summary: Desactivar un proveedor
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      description: Requiere rol 'admin'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor
      responses:
        "200":
          description: Proveedor desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Supplier"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Transactions ---
  /customers/{customerId}/transactions:
    post:
      summary: Crear una transacción
      tags:
        - Transactions
      security:
        - bearerAuth: []
      description: Requiere rol 'sales' o 'cashier'
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: ID del cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 100.50
                type:
                  type: string
                  enum: [cash, credit]
                invoice_number:
                  type: string
                notes:
                  type: string
              required:
                - amount
                - type
      responses:
        "201":
          description: Transacción creada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Obtener transacciones de un cliente
      tags:
        - Transactions
      security:
        - bearerAuth: []
      description: Requiere rol 'sales' o 'cashier'
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: ID del cliente
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Límite de resultados
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Desplazamiento para paginación
      responses:
        "200":
          description: Lista de transacciones
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  transactions:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /customers/{customerId}/transactions/{transactionId}:
    get:
      summary: Obtener una transacción por ID
      tags:
        - Transactions
      security:
        - bearerAuth: []
      description: Requiere rol 'sales' o 'cashier'
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: ID del cliente
        - in: path
          name: transactionId
          required: true
          schema:
            type: integer
          description: ID de la transacción
      responses:
        "200":
          description: Detalles de la transacción
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Transacción no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /customers/{customerId}/transactions/{transactionId}/cancel:
    patch:
      summary: Cancelar una transacción
      tags:
        - Transactions
      security:
        - bearerAuth: []
      description: Requiere rol 'admin' o 'cashier'
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: ID del cliente
        - in: path
          name: transactionId
          required: true
          schema:
            type: integer
          description: ID de la transacción
      responses:
        "200":
          description: Transacción cancelada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Transacción no encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # --- Reports ---
  /reports:
    get:
      summary: Obtener informe general
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Devuelve ventas totales, productos vendidos, clientes activos e inventario total del último mes. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Informe general generado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalSales:
                    type: number
                    description: Ventas totales del último mes
                  productsSold:
                    type: number
                    description: Cantidad total de productos vendidos en el último mes
                  activeCustomers:
                    type: integer
                    description: Número de clientes activos en el último mes
                  totalInventory:
                    type: number
                    description: Inventario total actual
                example:
                  totalSales: 15000.75
                  productsSold: 300
                  activeCustomers: 50
                  totalInventory: 1200
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/balance:
    get:
      summary: Obtener balance general
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Calcula el balance general (ingresos menos gastos). Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Balance general devuelto exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    description: Balance total (ingresos - gastos)
                example:
                  balance: 5000.25
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/expenses:
    get:
      summary: Obtener gastos totales
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Suma los gastos de órdenes de compra, pagos de deudas y mermas. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Gastos totales devueltos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalExpenses:
                    type: number
                    description: Suma total de todos los gastos
                example:
                  totalExpenses: 8000.50
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/sales:
    get:
      summary: Obtener ventas totales
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Devuelve la suma total de todas las ventas. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Ventas totales devueltas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_sales:
                    type: number
                    description: Suma total de todas las ventas
                example:
                  total_sales: 15000.75
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/transactions:
    get:
      summary: Obtener todas las transacciones
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Lista todas las transacciones registradas. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Lista de transacciones devuelta exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/transactions/income:
    get:
      summary: Obtener transacciones de ingresos
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Lista las transacciones de tipo 'cash' y 'credit'. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Lista de transacciones de ingresos devuelta exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/transactions/expenses:
    get:
      summary: Obtener transacciones de gastos
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Lista los gastos de órdenes de compra, pagos de deudas y mermas. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Lista de transacciones de gastos devuelta exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [purchase_order, debt_payment, merma]
                    id:
                      type: integer
                    amount:
                      type: number
                    created_at:
                      type: string
                      format: date-time
                  example:
                    type: "purchase_order"
                    id: 1
                    amount: 500.00
                    created_at: "2023-10-01T10:00:00Z"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/credits:
    get:
      summary: Obtener clientes con saldo de crédito positivo
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Lista los clientes con saldo de crédito mayor a 0. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Lista de clientes con crédito devuelta exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    balance:
                      type: number
                  example:
                    id: 1
                    first_name: "Juan"
                    last_name: "Pérez"
                    balance: 200.50
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/payable_credits:
    get:
      summary: Obtener cuentas por pagar a proveedores
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Lista las deudas pendientes con proveedores. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Lista de cuentas por pagar devuelta exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    company_name:
                      type: string
                    remaining_amount:
                      type: number
                  example:
                    id: 1
                    company_name: "Proveedor ABC"
                    remaining_amount: 1000.75
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/cash_registers:
    get:
      summary: Obtener información de cajas registradoras
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Lista todas las cajas registradoras. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Lista de cajas registradoras devuelta exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    # Asumiendo campos típicos, ajustar según la estructura real
                    name:
                      type: string
                    balance:
                      type: number
                  example:
                    id: 1
                    name: "Caja Principal"
                    balance: 5000.00
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/best_selling_products:
    get:
      summary: Obtener los productos más vendidos
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Lista los 10 productos más vendidos. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Lista de productos más vendidos devuelta exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: integer
                    product_name:
                      type: string
                    supplier_id:
                      type: integer
                    supplier_name:
                      type: string
                    total_quantity_sold:
                      type: number
                  example:
                    product_id: 1
                    product_name: "Producto A"
                    supplier_id: 1
                    supplier_name: "Proveedor ABC"
                    total_quantity_sold: 150
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /reports/frequent_customers:
    get:
      summary: Obtener los clientes más frecuentes
      tags:
        - Reports
      security:
        - bearerAuth: []
      description: Lista los 10 clientes con más transacciones. Requiere rol 'superuser' o 'system_admin'.
      responses:
        "200":
          description: Lista de clientes frecuentes devuelta exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    customer_id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    transaction_count:
                      type: integer
                  example:
                    customer_id: 1
                    first_name: "Juan"
                    last_name: "Pérez"
                    transaction_count: 25
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /products/barcode:
    get:
      summary: Obtener producto por código de barras
      tags:
        - Products
      security:
        - bearerAuth: []
      description: Devuelve los detalles de un producto basado en su código de barras. Requiere rol 'admin', 'inventory', 'sales' o 'cashier'.
      parameters:
        - in: query
          name: barcode
          required: true
          schema:
            type: string
          description: Código de barras del producto (ej. "7712345000019")
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Barcode es requerido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /products/purchase:
    post:
      summary: Registrar una compra de producto
      tags:
        - Products
      security:
        - bearerAuth: []
      description: Registra la entrada de un producto al inventario, actualizando el stock y permitiendo registrar crédito al proveedor o consignación. Requiere rol 'admin' o 'purchasing'.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                barcode:
                  type: string
                  description: Código de barras del producto
                  example: "7712345000019"
                quantity:
                  type: integer
                  description: Cantidad comprada
                  example: 5
                supplier_id:
                  type: integer
                  description: ID del proveedor
                  example: 1
                payment_type:
                  type: string
                  enum: [cash, credit, consignment]
                  description: Tipo de pago (efectivo, crédito o consignación)
                  example: "credit"
                user_id:
                  type: integer
                  description: ID del usuario que realiza la compra
                  example: 1
              required:
                - barcode
                - quantity
                - supplier_id
                - payment_type
                - user_id
      responses:
        "201":
          description: Compra registrada exitosamente
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Purchase registered with credit"
                      debt:
                        $ref: "#/components/schemas/SupplierDebt"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Purchase registered as consignment"
                      consignment_id:
                        type: integer
                        example: 1
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "Purchase registered (cash)"
        "400":
          description: Faltan campos requeridos o datos inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /products/sell:
    post:
      summary: Registrar una venta de producto
      tags:
        - Products
      security:
        - bearerAuth: []
      description: Registra la venta de un producto, reduciendo el stock y permitiendo registrar crédito al cliente si aplica. Requiere rol 'sales' o 'cashier'.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                barcode:
                  type: string
                  description: Código de barras del producto
                  example: "7712345000019"
                quantity:
                  type: integer
                  description: Cantidad vendida
                  example: 1
                customer_id:
                  type: integer
                  description: ID del cliente
                  example: 1
                payment_type:
                  type: string
                  enum: [cash, credit]
                  description: Tipo de pago (efectivo o crédito)
                  example: "credit"
                user_id:
                  type: integer
                  description: ID del usuario que realiza la venta
                  example: 2
              required:
                - barcode
                - quantity
                - customer_id
                - payment_type
                - user_id
      responses:
        "201":
          description: Venta registrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Sale registered"
                  transaction:
                    $ref: "#/components/schemas/Transaction"
        "400":
          description: Faltan campos requeridos, datos inválidos o stock insuficiente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Rol no permitido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
/reports/pdf/{type}:
  get:
    tags:
      - Reports
    summary: Genera un reporte en formato PDF
    parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          enum: [ventas, inventario, mermas]
    responses:
      '200':
        description: Archivo PDF generado
        content:
          application/pdf:
            schema:
              type: string
              format: binary
      '400':
        description: Tipo de reporte inválido

/reports/thermal/{type}:
  get:
    tags:
      - Reports
    summary: Envía comando a impresora térmica
    parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          enum: [ventas, inventario]
    responses:
      '200':
        description: Comando ejecutado
        content:
          text/plain:
            schema:
              type: string
      '500':
        description: Error de comunicación