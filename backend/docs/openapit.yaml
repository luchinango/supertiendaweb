openapi: 3.0.0
info:
  title: API de Tienda
  version: 1.0.0
  description: Documentación de la API para la gestión de una tienda, incluyendo usuarios, reportes, proveedores, transacciones y órdenes de compra.
  contact:
    name: Tu Nombre
    email: tuemail@example.com
servers:
  - url: http://localhost:5000/api
    description: Servidor de desarrollo
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        address:
          type: string
        mobile_phone:
          type: string
        role_id:
          type: integer
        created_at:
          type: string
          format: date-time
        status:
          type: string
      required:
        - username
        - password
        - email
        - first_name
        - last_name
        - role_id
    Supplier:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        contact:
          type: string
        phone:
          type: string
        email:
          type: string
        company_name:
          type: string
        tax_id:
          type: string
        address:
          type: string
        supplier_type:
          type: string
        status:
          type: string
      required:
        - name
        - contact
        - phone
        - email
        - company_name
        - tax_id
        - supplier_type
    Transaction:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        user_id:
          type: integer
        amount:
          type: number
        type:
          type: string
          enum: [cash, credit]
        invoice_number:
          type: string
        notes:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
    PurchaseOrder:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        supplier_id:
          type: integer
        quantity:
          type: integer
        order_date:
          type: string
          format: date-time
        status:
          type: string
          enum: [pending, processed, completed, cancelled]
        payment_type:
          type: string
          enum: [cash, credit, consignment]
        total_amount:
          type: number
        product_name:
          type: string
        supplier_name:
          type: string
      required:
        - product_id
        - supplier_id
        - quantity
    SupplierDebt:
      type: object
      properties:
        id:
          type: integer
        supplier_id:
          type: integer
        user_id:
          type: integer
        amount:
          type: number
        remaining_amount:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    DebtPayment:
      type: object
      properties:
        id:
          type: integer
        debt_id:
          type: integer
        amount:
          type: number
        payment_date:
          type: string
          format: date-time
    Consignment:
      type: object
      properties:
        id:
          type: integer
        supplier_id:
          type: integer
        user_id:
          type: integer
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        total_value:
          type: number
        sold_value:
          type: number
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ConsignmentItem:
      type: object
      properties:
        id:
          type: integer
        consignment_id:
          type: integer
        product_id:
          type: integer
        quantity_sent:
          type: integer
        quantity_sold:
          type: integer
        quantity_returned:
          type: integer
        quantity_delivered:
          type: integer
        price_at_time:
          type: number
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
paths:
  # --- Users ---
  /users/login:
    post:
      summary: Iniciar sesión de un usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: Token JWT devuelto
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Contraseña incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuario no encontrado o inactivo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/register:
    post:
      summary: Registrar un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Error en los datos enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      responses:
        '200':
          description: Detalles del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar un usuario completamente
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Actualizar parcialmente un usuario
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                address:
                  type: string
                mobile_phone:
                  type: string
                role_id:
                  type: integer
      responses:
        '200':
          description: Usuario actualizado parcialmente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: No se proporcionaron datos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/delete/{id}:
    post:
      summary: Desactivar un usuario
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del usuario
      responses:
        '200':
          description: Usuario desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}/suppliers/{supplierId}/debts:
    post:
      summary: Registrar una compra a crédito con un proveedor
      tags:
        - Debts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
        - in: path
          name: supplierId
          required: true
          schema:
            type: integer
          description: ID del proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 1000.50
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      quantity:
                        type: integer
                      price:
                        type: number
      responses:
        '201':
          description: Deuda creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  debt:
                    $ref: '#/components/schemas/SupplierDebt'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuario o proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}/suppliers/{supplierId}/debts/{debtId}/payments:
    post:
      summary: Registrar un pago de una deuda
      tags:
        - Debts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
        - in: path
          name: supplierId
          required: true
          schema:
            type: integer
          description: ID del proveedor
        - in: path
          name: debtId
          required: true
          schema:
            type: integer
          description: ID de la deuda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 500.25
      responses:
        '201':
          description: Pago registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  payment:
                    $ref: '#/components/schemas/DebtPayment'
        '400':
          description: Monto inválido o excede la deuda
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Deuda no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}/debts:
    get:
      summary: Obtener todas las deudas de un usuario con proveedores
      tags:
        - Debts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
      responses:
        '200':
          description: Lista de deudas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    supplier_id:
                      type: integer
                    user_id:
                      type: integer
                    amount:
                      type: number
                    supplier_name:
                      type: string
                    total_paid:
                      type: number
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}/suppliers/{supplierId}/consignments:
    post:
      summary: Registrar una consignación
      tags:
        - Consignments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
        - in: path
          name: supplierId
          required: true
          schema:
            type: integer
          description: ID del proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      quantity_sent:
                        type: integer
                end_date:
                  type: string
                  format: date
                  example: 2023-12-31
      responses:
        '201':
          description: Consignación creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  consignment:
                    $ref: '#/components/schemas/Consignment'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuario o proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}/suppliers/{supplierId}/consignments/{consignmentId}/settle:
    post:
      summary: Liquidar una consignación
      tags:
        - Consignments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID del usuario
        - in: path
          name: supplierId
          required: true
          schema:
            type: integer
          description: ID del proveedor
        - in: path
          name: consignmentId
          required: true
          schema:
            type: integer
          description: ID de la consignación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: integer
                      quantity_sold:
                        type: integer
      responses:
        '200':
          description: Consignación liquidada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  totalAmount:
                    type: number
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Consignación no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # --- Reports ---
  /report:
    get:
      summary: Obtener reporte general de la tienda
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Reporte general
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalSales:
                    type: number
                    example: 15000.50
                  productsSold:
                    type: number
                    example: 120
                  activeCustomers:
                    type: number
                    example: 25
                  totalInventory:
                    type: number
                    example: 500
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/balance:
    get:
      summary: Obtener balance general
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Balance general
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    example: 5000.75
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/expenses:
    get:
      summary: Obtener gastos totales
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Gastos totales
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalExpenses:
                    type: number
                    example: 3000.25
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/sales:
    get:
      summary: Obtener ventas totales
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Ventas totales
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_sales:
                    type: number
                    example: 15000.50
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/transactions:
    get:
      summary: Obtener todas las transacciones
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de transacciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/transactions/income:
    get:
      summary: Obtener transacciones de ingresos
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de transacciones de ingresos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/transactions/expenses:
    get:
      summary: Obtener transacciones de gastos
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de transacciones de gastos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    id:
                      type: integer
                    amount:
                      type: number
                    created_at:
                      type: string
                      format: date-time
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/credits:
    get:
      summary: Obtener créditos de clientes
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de créditos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    balance:
                      type: number
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/payable_credits:
    get:
      summary: Obtener cuentas por pagar a proveedores
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de cuentas por pagar
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    company_name:
                      type: string
                    remaining_amount:
                      type: number
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/cash_registers:
    get:
      summary: Obtener registros de caja
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de registros de caja
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    opening_amount:
                      type: number
                    closing_amount:
                      type: number
                    opening_date:
                      type: string
                      format: date-time
                    closing_date:
                      type: string
                      format: date-time
                    notes:
                      type: string
                    status:
                      type: string
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/best_selling_products:
    get:
      summary: Obtener los 10 productos más vendidos
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de productos más vendidos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: integer
                    product_name:
                      type: string
                    supplier_id:
                      type: integer
                    supplier_name:
                      type: string
                    total_quantity_sold:
                      type: number
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /report/frequent_customers:
    get:
      summary: Obtener los 10 clientes más frecuentes
      tags:
        - Reports
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de clientes frecuentes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    customer_id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    transaction_count:
                      type: number
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # --- Suppliers ---
  /suppliers:
    post:
      summary: Crear un proveedor
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '201':
          description: Proveedor creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Obtener todos los proveedores
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de proveedores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /suppliers/{id}:
    get:
      summary: Obtener un proveedor por ID
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor
      responses:
        '200':
          description: Detalles del proveedor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '404':
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar un proveedor completamente
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          description: Proveedor actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '404':
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Actualizar parcialmente un proveedor
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                contact:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                company_name:
                  type: string
                tax_id:
                  type: string
                address:
                  type: string
                supplier_type:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: Proveedor actualizado parcialmente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '400':
          description: No se proporcionaron datos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /suppliers/delete/{id}:
    post:
      summary: Desactivar un proveedor
      tags:
        - Suppliers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor
      responses:
        '200':
          description: Proveedor desactivado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Supplier'
        '400':
          description: ID inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # --- Transactions ---
  /customers/{customerId}/transactions:
    post:
      summary: Crear una transacción
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: ID del cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 100.50
                type:
                  type: string
                  enum: [cash, credit]
                invoice_number:
                  type: string
                notes:
                  type: string
              required:
                - amount
                - type
      responses:
        '201':
          description: Transacción creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Obtener transacciones de un cliente
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: ID del cliente
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Límite de resultados
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Desplazamiento para paginación
      responses:
        '200':
          description: Lista de transacciones
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customers/{customerId}/transactions/{transactionId}:
    get:
      summary: Obtener una transacción por ID
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: ID del cliente
        - in: path
          name: transactionId
          required: true
          schema:
            type: integer
          description: ID de la transacción
      responses:
        '200':
          description: Detalles de la transacción
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transacción no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customers/{customerId}/transactions/{transactionId}/cancel:
    patch:
      summary: Cancelar una transacción
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: ID del cliente
        - in: path
          name: transactionId
          required: true
          schema:
            type: integer
          description: ID de la transacción
      responses:
        '200':
          description: Transacción cancelada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # --- Purchase Orders ---
  /purchase-orders/products:
    post:
      summary: Crear un producto
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                actual_stock:
                  type: integer
                min_stock:
                  type: integer
                supplier_id:
                  type: integer
                price:
                  type: number
                category_id:
                  type: integer
              required:
                - name
                - supplier_id
                - price
      responses:
        '201':
          description: Producto creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  actual_stock:
                    type: integer
                  min_stock:
                    type: integer
                  supplier_id:
                    type: integer
                  price:
                    type: number
                  category_id:
                    type: integer
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /purchase-orders/check-stock:
    get:
      summary: Verificar niveles de stock y crear órdenes de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Órdenes de compra creadas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/PurchaseOrder'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /purchase-orders:
    post:
      summary: Crear una orden de compra manualmente
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
      responses:
        '201':
          description: Orden de compra creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        '400':
          description: Cantidad requerida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Producto o proveedor no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Obtener todas las órdenes de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de órdenes de compra
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseOrder'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /purchase-orders/{id}:
    get:
      summary: Obtener una orden de compra por ID
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la orden de compra
      responses:
        '200':
          description: Detalles de la orden de compra
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        '404':
          description: Orden de compra no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar una orden de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la orden de compra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
      responses:
        '200':
          description: Orden de compra actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        '400':
          description: Cantidad requerida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Orden de compra no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Eliminar una orden de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la orden de compra
      responses:
        '200':
          description: Orden de compra eliminada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  purchaseOrder:
                    $ref: '#/components/schemas/PurchaseOrder'
        '404':
          description: Orden de compra no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /purchase-orders/{id}/process:
    post:
      summary: Procesar una orden de compra
      tags:
        - Purchase Orders
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la orden de compra
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_type:
                  type: string
                  enum: [cash, credit, consignment]
      responses:
        '200':
          description: Orden de compra procesada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
        '404':
          description: Orden de compra no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'