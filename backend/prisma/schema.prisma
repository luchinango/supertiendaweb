generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  nombre    String
  apellido  String
  direccion String
  tel_cel   String
  email     String
  puesto    String
}

model Producto {
  id              Int      @id @default(autoincrement())
  nombre          String   @unique
  descripcion     String
  precio_compra   Float
  precio_venta    Float
  sku             String
  barcode         String   @unique
  category        String
  subcategory     String
  brand           String
  unidad          String
  minStock        Int
  maxStock        Int
  actualStock     Int
  fechaExpiracion DateTime
  imagen          String
  proveedorId     Int       // Ahora sí podemos hacerlo requerido
  proveedor       Proveedor @relation(fields: [proveedorId], references: [id])
  carritoItems    CarritoItem[] // Relación inversa añadida
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Proveedor {
  id            Int      @id @default(autoincrement())
  razonSocial   String   @unique
  nit           String   @unique
  direccion     String
  telefono      String
  email         String
  contacto      String   
  tipoProveedor String   
  estado        String   
  productos     Producto[] 
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Cliente {
  id          Int      @id @default(autoincrement()) @map("cliente_id")
  nombre      String
  razonSocial String?  @map("razon_social")
  direccion   String
  telefono    String
  email       String   @unique
  carritos    Carrito[] // Relación inversa añadida
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("clientes")
}

model Carrito {
  id        Int            @id @default(autoincrement())
  clienteId Int
  estado    String         @default('activo')
  total     Float          @default(0)
  items     CarritoItem[]
  cliente   Cliente        @relation(fields: [clienteId], references: [id])
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model CarritoItem {
  id         Int      @id @default(autoincrement())
  cantidad   Int
  precio     Float
  carritoId  Int
  productoId Int
  carrito    Carrito  @relation(fields: [carritoId], references: [id])
  producto   Producto @relation(fields: [productoId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
