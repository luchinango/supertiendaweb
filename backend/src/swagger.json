{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "API Super Tienda",
    "contact": {
      "name": "Super    Tienda",
      "url": "https://www.superTienda.com",
      "email": "superTienda@gmail.com"
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "password_hash": {
            "type": "string"
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "PENDING_VERIFICATION",
            "enum": [
              "PENDING_VERIFICATION",
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "LOCKED",
              "PASSWORD_RESET",
              "DELETED"
            ]
          },
          "role_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_login": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "role": {
            "$ref": "#/definitions/Role"
          },
          "employee": {
            "anyOf": [
              {
                "$ref": "#/definitions/Employee"
              },
              {
                "type": "null"
              }
            ]
          },
          "auditLogs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuditLog"
            }
          },
          "cashRegisters": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CashRegister"
            }
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Sale"
            }
          },
          "carts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cart"
            }
          },
          "inventoryTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InventoryTransaction"
            }
          },
          "businesses": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Business"
            }
          },
          "purchaseOrders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "auditCashRegisters": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuditCashRegister"
            }
          }
        },
        "required": [
          "username",
          "password_hash",
          "role_id"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/User"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/RolePermission"
            }
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "module": {
            "type": "string",
            "default": ""
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/RolePermission"
            }
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "RolePermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "role_id": {
            "type": "integer"
          },
          "permission_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "$ref": "#/definitions/Role"
          },
          "permission": {
            "$ref": "#/definitions/Permission"
          }
        },
        "required": [
          "role_id",
          "permission_id"
        ]
      },
      "Business": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "legal_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "nit": {
            "type": [
              "string",
              "null"
            ]
          },
          "business_type": {
            "type": "string",
            "default": "PERSONA_NATURAL",
            "enum": [
              "EMPRESA_UNIPERSONAL",
              "SOCIEDAD_ANONIMA",
              "SOCIEDAD_LIMITADA",
              "SOCIEDAD_COOPERATIVA",
              "EMPRESA_PUBLICA",
              "ORGANIZACION_NO_LUCRATIVA",
              "PERSONA_NATURAL"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "address": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "department": {
            "type": "string",
            "default": "LA_PAZ",
            "enum": [
              "LA_PAZ",
              "COCHABAMBA",
              "SANTA_CRUZ",
              "ORURO",
              "POTOSI",
              "CHUQUISACA",
              "TARIJA",
              "BENI",
              "PANDO"
            ]
          },
          "country": {
            "type": "string",
            "default": "Bolivia"
          },
          "postal_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "logo_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "website": {
            "type": [
              "string",
              "null"
            ]
          },
          "timezone": {
            "type": "string",
            "default": "America/La_Paz"
          },
          "currency": {
            "type": "string",
            "default": "BOB",
            "enum": [
              "BOB",
              "USD",
              "EUR"
            ]
          },
          "default_tax_rate": {
            "type": "number",
            "default": 13
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PENDING"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "cashRegisters": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CashRegister"
            }
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Sale"
            }
          },
          "carts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cart"
            }
          },
          "purchaseOrders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "inventoryTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InventoryTransaction"
            }
          },
          "fiscalSettings": {
            "anyOf": [
              {
                "$ref": "#/definitions/FiscalSettings"
              },
              {
                "type": "null"
              }
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Product"
            }
          },
          "auditLogs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuditLog"
            }
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Employee"
            }
          },
          "businessProducts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BusinessProduct"
            }
          },
          "suppliers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Supplier"
            }
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Customer"
            }
          },
          "User": {
            "anyOf": [
              {
                "$ref": "#/definitions/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "userId": {
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "FiscalSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer"
          },
          "authorization_number": {
            "type": "string"
          },
          "activity_code": {
            "type": "string"
          },
          "law_number": {
            "type": "string"
          },
          "invoice_series": {
            "type": "string"
          },
          "invoice_start_number": {
            "type": "integer",
            "default": 1
          },
          "invoice_current_number": {
            "type": "integer",
            "default": 1
          },
          "invoice_end_number": {
            "type": "integer"
          },
          "is_electronic": {
            "type": "boolean",
            "default": true
          },
          "siat_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "siat_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "siat_environment": {
            "type": "string",
            "default": "TEST"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/definitions/Business"
          }
        },
        "required": [
          "business_id",
          "authorization_number",
          "activity_code",
          "law_number",
          "invoice_series",
          "invoice_end_number"
        ]
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer",
            "default": 1
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "position": {
            "type": "string"
          },
          "department": {
            "type": [
              "string",
              "null"
            ]
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "salary": {
            "type": [
              "number",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "ON_LEAVE",
              "TERMINATED",
              "RETIRED"
            ]
          },
          "gender": {
            "type": "string",
            "default": "UNSPECIFIED",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER",
              "UNSPECIFIED"
            ]
          },
          "birth_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "address": {
            "type": [
              "string",
              "null"
            ]
          },
          "emergency_contact": {
            "type": [
              "string",
              "null"
            ]
          },
          "emergency_phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "ci_number": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "user": {
            "$ref": "#/definitions/User"
          },
          "business": {
            "$ref": "#/definitions/Business"
          }
        },
        "required": [
          "user_id",
          "first_name",
          "position",
          "start_date"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "parent_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "sort_order": {
            "type": "integer",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/definitions/Category"
              },
              {
                "type": "null"
              }
            ]
          },
          "childrens": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Category"
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer",
            "default": 1
          },
          "category_id": {
            "type": "integer"
          },
          "sku": {
            "type": [
              "string",
              "null"
            ]
          },
          "barcode": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "brand": {
            "type": [
              "string",
              "null"
            ]
          },
          "model": {
            "type": [
              "string",
              "null"
            ]
          },
          "unit": {
            "type": [
              "string",
              "null"
            ],
            "default": "pcs"
          },
          "weight": {
            "type": [
              "number",
              "null"
            ]
          },
          "dimensions": {
            "type": [
              "string",
              "null"
            ]
          },
          "cost_price": {
            "type": "number",
            "default": 0
          },
          "selling_price": {
            "type": "number",
            "default": 0
          },
          "tax_type": {
            "type": "string",
            "default": "IVA_13",
            "enum": [
              "IVA_13",
              "IVA_0",
              "EXENTO",
              "ICE",
              "IT",
              "IUE"
            ]
          },
          "tax_rate": {
            "type": "number",
            "default": 13
          },
          "min_stock": {
            "type": "integer",
            "default": 0
          },
          "max_stock": {
            "type": [
              "integer",
              "null"
            ]
          },
          "reorder_point": {
            "type": "integer",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DISCONTINUED",
              "OUT_OF_STOCK"
            ]
          },
          "expiry_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "category": {
            "$ref": "#/definitions/Category"
          },
          "businessProducts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BusinessProduct"
            }
          },
          "cartItems": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CartItem"
            }
          },
          "saleItems": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SaleItem"
            }
          },
          "purchaseOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrderItem"
            }
          },
          "inventoryTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InventoryTransaction"
            }
          }
        },
        "required": [
          "category_id",
          "name"
        ]
      },
      "BusinessProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "custom_price": {
            "type": [
              "number",
              "null"
            ]
          },
          "current_stock": {
            "type": "integer",
            "default": 0
          },
          "reserved_stock": {
            "type": "integer",
            "default": 0
          },
          "available_stock": {
            "type": "integer",
            "default": 0
          },
          "last_restock": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "product": {
            "$ref": "#/definitions/Product"
          }
        },
        "required": [
          "business_id",
          "product_id"
        ]
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer",
            "default": 1
          },
          "code": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": "string"
          },
          "document_type": {
            "type": "string",
            "default": "NIT",
            "enum": [
              "NIT",
              "CI",
              "PASSPORT",
              "FOREIGN_ID"
            ]
          },
          "document_number": {
            "type": [
              "string",
              "null"
            ]
          },
          "contact_person": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "address": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "department": {
            "type": [
              "string",
              "null"
            ],
            "default": "LA_PAZ",
            "enum": [
              "LA_PAZ",
              "COCHABAMBA",
              "SANTA_CRUZ",
              "ORURO",
              "POTOSI",
              "CHUQUISACA",
              "TARIJA",
              "BENI",
              "PANDO"
            ]
          },
          "country": {
            "type": "string",
            "default": "Bolivia"
          },
          "postal_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "payment_terms": {
            "type": "integer",
            "default": 30
          },
          "credit_limit": {
            "type": [
              "number",
              "null"
            ]
          },
          "current_balance": {
            "type": "number",
            "default": 0
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "purchaseOrders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "supplierDebts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SupplierDebt"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer",
            "default": 1
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "document_type": {
            "type": "string",
            "default": "CI",
            "enum": [
              "NIT",
              "CI",
              "PASSPORT",
              "FOREIGN_ID"
            ]
          },
          "document_number": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "address": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "department": {
            "type": [
              "string",
              "null"
            ],
            "default": "LA_PAZ",
            "enum": [
              "LA_PAZ",
              "COCHABAMBA",
              "SANTA_CRUZ",
              "ORURO",
              "POTOSI",
              "CHUQUISACA",
              "TARIJA",
              "BENI",
              "PANDO"
            ]
          },
          "country": {
            "type": "string",
            "default": "Bolivia"
          },
          "postal_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "credit_limit": {
            "type": [
              "number",
              "null"
            ]
          },
          "current_balance": {
            "type": "number",
            "default": 0
          },
          "loyalty_points": {
            "type": "integer",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "carts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cart"
            }
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Sale"
            }
          },
          "customerDebts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerDebt"
            }
          }
        },
        "required": [
          "first_name"
        ]
      },
      "PurchaseOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer",
            "default": 1
          },
          "supplier_id": {
            "type": "integer"
          },
          "po_number": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "DRAFT",
            "enum": [
              "DRAFT",
              "PENDING",
              "APPROVED",
              "ORDERED",
              "PARTIALLY_RECEIVED",
              "RECEIVED",
              "CANCELLED"
            ]
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "expected_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "received_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "subtotal": {
            "type": "number",
            "default": 0
          },
          "tax_amount": {
            "type": "number",
            "default": 0
          },
          "total_amount": {
            "type": "number",
            "default": 0
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "approved_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "supplier": {
            "$ref": "#/definitions/Supplier"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrderItem"
            }
          },
          "supplierDebts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SupplierDebt"
            }
          },
          "User": {
            "anyOf": [
              {
                "$ref": "#/definitions/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "userId": {
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "required": [
          "supplier_id"
        ]
      },
      "PurchaseOrderItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "purchase_order_id": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "unit_cost": {
            "type": "number"
          },
          "received_quantity": {
            "type": "integer",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseOrder": {
            "$ref": "#/definitions/PurchaseOrder"
          },
          "product": {
            "$ref": "#/definitions/Product"
          }
        },
        "required": [
          "purchase_order_id",
          "product_id",
          "quantity",
          "unit_cost"
        ]
      },
      "SupplierDebt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "supplier_id": {
            "type": "integer"
          },
          "purchase_order_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "amount": {
            "type": "number"
          },
          "paid_amount": {
            "type": "number",
            "default": 0
          },
          "due_date": {
            "type": "string",
            "format": "date-time"
          },
          "is_paid": {
            "type": "boolean",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "paid_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "supplier": {
            "$ref": "#/definitions/Supplier"
          },
          "purchaseOrder": {
            "anyOf": [
              {
                "$ref": "#/definitions/PurchaseOrder"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "supplier_id",
          "amount",
          "due_date"
        ]
      },
      "Cart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "customer_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "PROCESSING",
              "COMPLETED",
              "ABANDONED"
            ]
          },
          "subtotal": {
            "type": "number",
            "default": 0
          },
          "tax_amount": {
            "type": "number",
            "default": 0
          },
          "total_amount": {
            "type": "number",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "user": {
            "$ref": "#/definitions/User"
          },
          "customer": {
            "anyOf": [
              {
                "$ref": "#/definitions/Customer"
              },
              {
                "type": "null"
              }
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CartItem"
            }
          },
          "sale": {
            "anyOf": [
              {
                "$ref": "#/definitions/Sale"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "business_id",
          "user_id"
        ]
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "cart_id": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "unit_price": {
            "type": "number"
          },
          "tax_rate": {
            "type": "number",
            "default": 13
          },
          "tax_amount": {
            "type": "number",
            "default": 0
          },
          "total_price": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "cart": {
            "$ref": "#/definitions/Cart"
          },
          "product": {
            "$ref": "#/definitions/Product"
          }
        },
        "required": [
          "cart_id",
          "product_id",
          "quantity",
          "unit_price",
          "total_price"
        ]
      },
      "Sale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer"
          },
          "cart_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "customer_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "invoice_number": {
            "type": "string"
          },
          "invoice_type": {
            "type": "string",
            "default": "FACTURA",
            "enum": [
              "FACTURA",
              "FACTURA_EXENTA",
              "NOTA_CREDITO",
              "NOTA_DEBITO",
              "GUIA_REMISION",
              "COMPROBANTE_ALQUILER",
              "NOTA_SIMPLE"
            ]
          },
          "authorization_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "control_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "COMPLETED",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED",
              "REFUNDED",
              "PARTIALLY_REFUNDED"
            ]
          },
          "subtotal": {
            "type": "number"
          },
          "tax_amount": {
            "type": "number"
          },
          "discount_amount": {
            "type": "number",
            "default": 0
          },
          "total_amount": {
            "type": "number"
          },
          "payment_method": {
            "type": "string",
            "enum": [
              "CASH",
              "CREDIT_CARD",
              "DEBIT_CARD",
              "BANK_TRANSFER",
              "MOBILE_PAYMENT",
              "GIFT_CARD",
              "LOYALTY_POINTS",
              "QR_PAYMENT",
              "ELECTRONIC_WALLET"
            ]
          },
          "payment_status": {
            "type": "string",
            "default": "PENDING",
            "enum": [
              "PENDING",
              "PAID",
              "FAILED",
              "REFUNDED",
              "PARTIALLY_REFUNDED"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "cart": {
            "$ref": "#/definitions/Cart"
          },
          "user": {
            "$ref": "#/definitions/User"
          },
          "customer": {
            "anyOf": [
              {
                "$ref": "#/definitions/Customer"
              },
              {
                "type": "null"
              }
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SaleItem"
            }
          },
          "customerDebts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerDebt"
            }
          },
          "CashRegister": {
            "anyOf": [
              {
                "$ref": "#/definitions/CashRegister"
              },
              {
                "type": "null"
              }
            ]
          },
          "cashRegisterId": {
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "required": [
          "business_id",
          "cart_id",
          "user_id",
          "invoice_number",
          "subtotal",
          "tax_amount",
          "total_amount",
          "payment_method"
        ]
      },
      "SaleItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "sale_id": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "unit_price": {
            "type": "number"
          },
          "tax_rate": {
            "type": "number",
            "default": 13
          },
          "tax_amount": {
            "type": "number"
          },
          "discount_amount": {
            "type": "number",
            "default": 0
          },
          "total_price": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "sale": {
            "$ref": "#/definitions/Sale"
          },
          "product": {
            "$ref": "#/definitions/Product"
          }
        },
        "required": [
          "sale_id",
          "product_id",
          "quantity",
          "unit_price",
          "tax_amount",
          "total_price"
        ]
      },
      "CustomerDebt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "customer_id": {
            "type": "integer"
          },
          "sale_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "amount": {
            "type": "number"
          },
          "paid_amount": {
            "type": "number",
            "default": 0
          },
          "due_date": {
            "type": "string",
            "format": "date-time"
          },
          "is_paid": {
            "type": "boolean",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "paid_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "customer": {
            "$ref": "#/definitions/Customer"
          },
          "sale": {
            "anyOf": [
              {
                "$ref": "#/definitions/Sale"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "customer_id",
          "amount",
          "due_date"
        ]
      },
      "CashRegister": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "register_number": {
            "type": "string"
          },
          "opening_amount": {
            "type": "number"
          },
          "closing_amount": {
            "type": [
              "number",
              "null"
            ]
          },
          "current_amount": {
            "type": "number"
          },
          "opening_date": {
            "type": "string",
            "format": "date-time"
          },
          "closing_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "default": "OPEN",
            "enum": [
              "OPEN",
              "CLOSED",
              "SUSPENDED"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_by": {
            "type": "integer",
            "default": 0
          },
          "updated_by": {
            "type": "integer",
            "default": 0
          },
          "deleted_by": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "user": {
            "$ref": "#/definitions/User"
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Sale"
            }
          },
          "auditLogs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AuditCashRegister"
            }
          }
        },
        "required": [
          "business_id",
          "user_id",
          "register_number",
          "opening_amount",
          "current_amount"
        ]
      },
      "InventoryTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "transaction_type": {
            "type": "string",
            "enum": [
              "PURCHASE",
              "SALE",
              "ADJUSTMENT",
              "TRANSFER",
              "RETURN",
              "DAMAGED",
              "EXPIRED",
              "THEFT",
              "LOSS"
            ]
          },
          "quantity": {
            "type": "integer"
          },
          "unit_cost": {
            "type": "number"
          },
          "total_cost": {
            "type": "number"
          },
          "reference_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "reference_type": {
            "type": [
              "string",
              "null"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "business": {
            "$ref": "#/definitions/Business"
          },
          "product": {
            "$ref": "#/definitions/Product"
          },
          "user": {
            "$ref": "#/definitions/User"
          }
        },
        "required": [
          "business_id",
          "product_id",
          "user_id",
          "transaction_type",
          "quantity",
          "unit_cost",
          "total_cost"
        ]
      },
      "AuditLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "business_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "user_id": {
            "type": "integer"
          },
          "action": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "entity_id": {
            "type": "integer"
          },
          "old_values": {
            "type": [
              "number",
              "string",
              "boolean",
              "object",
              "array",
              "null"
            ]
          },
          "new_values": {
            "type": [
              "number",
              "string",
              "boolean",
              "object",
              "array",
              "null"
            ]
          },
          "ip_address": {
            "type": [
              "string",
              "null"
            ]
          },
          "user_agent": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "business": {
            "anyOf": [
              {
                "$ref": "#/definitions/Business"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "$ref": "#/definitions/User"
          }
        },
        "required": [
          "user_id",
          "action",
          "entity",
          "entity_id"
        ]
      },
      "AuditCashRegister": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "cash_register_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "action": {
            "type": "string"
          },
          "amount": {
            "type": [
              "number",
              "null"
            ]
          },
          "details": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "cashRegister": {
            "$ref": "#/definitions/CashRegister"
          },
          "user": {
            "$ref": "#/definitions/User"
          }
        },
        "required": [
          "cash_register_id",
          "user_id",
          "action"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/audit-cash-registers": {
      "get": {
        "summary": "Listar todas las auditorías de cajas",
        "tags": [
          "AuditCashRegisters"
        ],
        "responses": {
          "200": {
            "description": "Lista de auditorías"
          }
        }
      },
      "post": {
        "summary": "Registrar acción sobre una caja",
        "tags": [
          "AuditCashRegisters"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cashRegisterId",
                  "action",
                  "userId"
                ],
                "properties": {
                  "cashRegisterId": {
                    "type": "integer"
                  },
                  "action": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "integer"
                  },
                  "details": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Auditoría registrada"
          }
        }
      }
    },
    "/api/audit-cash-registers/{id}": {
      "get": {
        "summary": "Obtener auditoría de caja por ID",
        "tags": [
          "AuditCashRegisters"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auditoría encontrada"
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar auditoría de caja",
        "tags": [
          "AuditCashRegisters"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Auditoría eliminada exitosamente"
          }
        }
      }
    },
    "/api/audit-logs": {
      "get": {
        "summary": "Listar todas las auditorías",
        "tags": [
          "AuditLogs"
        ],
        "responses": {
          "200": {
            "description": "Lista de auditorías"
          }
        }
      },
      "post": {
        "summary": "Registrar acción de auditoría",
        "tags": [
          "AuditLogs"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "action",
                  "entity",
                  "entity_id",
                  "user_id"
                ],
                "properties": {
                  "action": {
                    "type": "string"
                  },
                  "entity": {
                    "type": "string"
                  },
                  "entity_id": {
                    "type": "integer"
                  },
                  "old_values": {
                    "type": "object"
                  },
                  "new_values": {
                    "type": "object"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "ip_address": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Auditoría registrada"
          }
        }
      }
    },
    "/api/audit-logs/{id}": {
      "get": {
        "summary": "Obtener auditoría por ID",
        "tags": [
          "AuditLogs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auditoría encontrada"
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar auditoría",
        "tags": [
          "AuditLogs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Auditoría eliminada"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Iniciar sesión",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "username": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Refrescar token de acceso",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refrescado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "summary": "Cambiar contraseña",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contraseña actualizada exitosamente"
          }
        }
      }
    },
    "/api/auth/verify": {
      "get": {
        "summary": "Verificar token",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token válido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/businesses": {
      "post": {
        "summary": "Crear un nuevo negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "type_id"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "legal_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tax_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "logo_url": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "type_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Obtener lista de negocios",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "SUSPENDED"
              ]
            },
            "description": "Filtrar por estado"
          },
          {
            "in": "query",
            "name": "type_id",
            "schema": {
              "type": "integer"
            },
            "description": "Filtrar por tipo de negocio"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Buscar por nombre, razón social o NIT"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de negocios obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/businesses/{id}": {
      "get": {
        "summary": "Obtener un negocio por ID",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Negocio obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "put": {
        "summary": "Actualizar un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Negocio actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "delete": {
        "summary": "Desactivar un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Negocio desactivado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/businesses/types": {
      "get": {
        "summary": "Obtener tipos de negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tipos de negocio obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/businesses/{businessId}/products": {
      "post": {
        "summary": "Agregar producto a un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Producto agregado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "get": {
        "summary": "Obtener productos de un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Productos obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/businesses/{businessId}/products/{productId}": {
      "put": {
        "summary": "Actualizar producto en un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Producto o negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "delete": {
        "summary": "Remover producto de un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto removido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Producto o negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/business-org-charts": {
      "get": {
        "summary": "Listar todos los organigramas",
        "tags": [
          "BusinessOrgCharts"
        ],
        "responses": {
          "200": {
            "description": "Lista de organigramas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessOrgChart"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo organigrama",
        "tags": [
          "BusinessOrgCharts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "businessId",
                  "userId",
                  "position"
                ],
                "properties": {
                  "businessId": {
                    "type": "integer"
                  },
                  "userId": {
                    "type": "integer"
                  },
                  "position": {
                    "type": "string"
                  },
                  "parentPositionId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organigrama creado"
          }
        }
      }
    },
    "/api/business-org-charts/{id}": {
      "get": {
        "summary": "Obtener un organigrama por ID",
        "tags": [
          "BusinessOrgCharts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organigrama encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar un organigrama",
        "tags": [
          "BusinessOrgCharts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "businessId": {
                    "type": "integer"
                  },
                  "userId": {
                    "type": "integer"
                  },
                  "position": {
                    "type": "string"
                  },
                  "parentPositionId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organigrama actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar un organigrama",
        "tags": [
          "BusinessOrgCharts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/business-products": {
      "get": {
        "summary": "Listar todos los productos asignados a negocios",
        "tags": [
          "BusinessProducts"
        ],
        "responses": {
          "200": {
            "description": "Lista de asignaciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessProduct"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear una nueva asignación de producto a negocio",
        "tags": [
          "BusinessProducts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "businessId",
                  "productId"
                ],
                "properties": {
                  "businessId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  },
                  "customPrice": {
                    "type": "number",
                    "format": "decimal"
                  },
                  "actualStock": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asignación creada"
          },
          "400": {
            "description": "Asignación duplicada"
          }
        }
      }
    },
    "/api/business-products/{id}": {
      "get": {
        "summary": "Obtener asignación de producto por ID",
        "tags": [
          "BusinessProducts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asignación encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar asignación de producto a negocio",
        "tags": [
          "BusinessProducts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customPrice": {
                    "type": "number"
                  },
                  "actualStock": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asignación actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar asignación de producto",
        "tags": [
          "BusinessProducts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/business-types": {
      "get": {
        "summary": "Listar todos los tipos de negocio",
        "tags": [
          "BusinessTypes"
        ],
        "responses": {
          "200": {
            "description": "Lista de tipos de negocio",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear tipo de negocio",
        "tags": [
          "BusinessTypes"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tipo creado"
          }
        }
      }
    },
    "/api/business-types/{id}": {
      "get": {
        "summary": "Obtener tipo de negocio por ID",
        "tags": [
          "BusinessTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar tipo de negocio",
        "tags": [
          "BusinessTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tipo actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar tipo de negocio",
        "tags": [
          "BusinessTypes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tipo eliminado exitosamente"
          }
        }
      }
    },
    "/api/carts": {
      "get": {
        "summary": "Listar todos los carritos de compra",
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "Lista de carritos"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo carrito de compra",
        "tags": [
          "Carts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "customer_id"
                ],
                "properties": {
                  "customer_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Carrito creado"
          }
        }
      }
    },
    "/api/carts/{id}": {
      "get": {
        "summary": "Obtener carrito por ID",
        "tags": [
          "Carts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carrito encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar carrito",
        "tags": [
          "Carts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "customer_id"
                ],
                "properties": {
                  "customer_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Carrito actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar carrito",
        "tags": [
          "Carts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Carrito eliminado"
          }
        }
      }
    },
    "/api/businesses/{businessId}/cart": {
      "get": {
        "summary": "Obtener carrito activo",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del negocio"
          }
        ],
        "responses": {
          "200": {
            "description": "Carrito obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Carrito no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del negocio"
          }
        ],
        "responses": {
          "201": {
            "description": "Carrito creado exitosamente"
          },
          "401": {
            "description": "No autorizado"
          },
          "409": {
            "description": "Ya existe un carrito activo"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart/{cartId}/items": {
      "post": {
        "summary": "Agregar item al carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "productId",
                  "quantity"
                ],
                "properties": {
                  "productId": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item agregado exitosamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Carrito o producto no encontrado"
          },
          "409": {
            "description": "Stock insuficiente"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart/{cartId}/items/{productId}": {
      "put": {
        "summary": "Actualizar cantidad de item",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del producto"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cantidad actualizada exitosamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Item no encontrado"
          },
          "409": {
            "description": "Stock insuficiente"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "delete": {
        "summary": "Eliminar item del carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del producto"
          }
        ],
        "responses": {
          "204": {
            "description": "Item eliminado exitosamente"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Item no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart/{cartId}/clear": {
      "delete": {
        "summary": "Vaciar carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "responses": {
          "204": {
            "description": "Carrito vaciado exitosamente"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Carrito no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart/{cartId}/total": {
      "get": {
        "summary": "Obtener total del carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "responses": {
          "200": {
            "description": "Total obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Carrito no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart-items": {
      "get": {
        "summary": "Listar todos los ítems de carritos",
        "tags": [
          "CartItems"
        ],
        "responses": {
          "200": {
            "description": "Lista de ítems"
          }
        }
      },
      "post": {
        "summary": "Agregar producto al carrito",
        "tags": [
          "CartItems"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cart_id",
                  "product_id",
                  "quantity",
                  "price_at_time"
                ],
                "properties": {
                  "cart_id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "price_at_time": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ítem agregado"
          }
        }
      }
    },
    "/api/cart-items/{id}": {
      "get": {
        "summary": "Obtener ítem de carrito por ID",
        "tags": [
          "CartItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ítem encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar producto en carrito",
        "tags": [
          "CartItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer"
                  },
                  "price_at_time": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ítem actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar ítem del carrito",
        "tags": [
          "CartItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Ítem eliminado"
          }
        }
      }
    },
    "/api/cash-registers": {
      "get": {
        "summary": "Listar todas las cajas",
        "tags": [
          "CashRegisters"
        ],
        "responses": {
          "200": {
            "description": "Lista de cajas"
          }
        }
      },
      "post": {
        "summary": "Abrir una nueva caja",
        "tags": [
          "CashRegisters"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id",
                  "opening_amount"
                ],
                "properties": {
                  "user_id": {
                    "type": "integer"
                  },
                  "opening_amount": {
                    "type": "number"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Caja abierta"
          }
        }
      }
    },
    "/api/cash-registers/{id}": {
      "get": {
        "summary": "Obtener una caja por ID",
        "tags": [
          "CashRegisters"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Caja encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Cerrar caja",
        "tags": [
          "CashRegisters"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "closing_amount": {
                    "type": "number"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Caja actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar caja",
        "tags": [
          "CashRegisters"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Caja eliminada"
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "summary": "Listar todas las categorías",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "Lista de categorías",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear nueva categoría",
        "tags": [
          "Categories"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Categoría creada"
          },
          "400": {
            "description": "Categoría duplicada"
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "summary": "Obtener categoría por ID",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categoría encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar categoría",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Categoría actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar categoría",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Categoría eliminada exitosamente"
          }
        }
      }
    },
    "/api/consignments": {
      "get": {
        "summary": "Listar todas las consignaciones",
        "tags": [
          "Consignments"
        ],
        "responses": {
          "200": {
            "description": "Lista de consignaciones"
          }
        }
      },
      "post": {
        "summary": "Crear nueva consignación",
        "tags": [
          "Consignments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Consignación creada"
          }
        }
      }
    },
    "/api/consignments/{id}": {
      "get": {
        "summary": "Obtener consignación por ID",
        "tags": [
          "Consignments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Consignación encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar consignación",
        "tags": [
          "Consignments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Consignación actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar consignación",
        "tags": [
          "Consignments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/consignment-items": {
      "get": {
        "summary": "Listar todos los productos consignados",
        "tags": [
          "ConsignmentItems"
        ],
        "responses": {
          "200": {
            "description": "Lista de productos consignados"
          }
        }
      },
      "post": {
        "summary": "Crear producto consignado",
        "tags": [
          "ConsignmentItems"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsignmentItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Producto consignado creado"
          }
        }
      }
    },
    "/api/consignment-items/{id}": {
      "get": {
        "summary": "Obtener producto consignado por ID",
        "tags": [
          "ConsignmentItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto consignado encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar producto consignado",
        "tags": [
          "ConsignmentItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsignmentItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Producto consignado actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar producto consignado",
        "tags": [
          "ConsignmentItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/credits": {
      "get": {
        "summary": "Listar todos los créditos de clientes",
        "tags": [
          "Credits"
        ],
        "responses": {
          "200": {
            "description": "Lista de créditos"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo crédito para cliente",
        "tags": [
          "Credits"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credit"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Crédito creado"
          },
          "400": {
            "description": "Cliente ya tiene crédito"
          }
        }
      }
    },
    "/api/credits/{id}": {
      "get": {
        "summary": "Obtener crédito de cliente por ID",
        "tags": [
          "Credits"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Crédito encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar crédito de cliente",
        "tags": [
          "Credits"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credit"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Crédito actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar crédito de cliente",
        "tags": [
          "Credits"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Crédito eliminado"
          }
        }
      }
    },
    "/api/customers": {
      "get": {
        "summary": "Listar todos los clientes",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Lista de clientes"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo cliente",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cliente creado"
          },
          "400": {
            "description": "NIT o Email duplicado"
          }
        }
      }
    },
    "/api/customers/{id}": {
      "get": {
        "summary": "Obtener cliente por ID",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar cliente",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar cliente",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cliente eliminado exitosamente"
          }
        }
      }
    },
    "/api/debt-payments": {
      "get": {
        "summary": "Listar todos los pagos de deudas",
        "tags": [
          "DebtPayments"
        ],
        "responses": {
          "200": {
            "description": "Lista de pagos de deudas"
          }
        }
      },
      "post": {
        "summary": "Registrar un pago de deuda",
        "tags": [
          "DebtPayments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "debt_id",
                  "amount"
                ],
                "properties": {
                  "debt_id": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pago registrado"
          }
        }
      }
    },
    "/api/debt-payments/{id}": {
      "get": {
        "summary": "Obtener pago de deuda por ID",
        "tags": [
          "DebtPayments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pago encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar pago de deuda",
        "tags": [
          "DebtPayments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pago actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar pago de deuda",
        "tags": [
          "DebtPayments"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pago eliminado exitosamente"
          }
        }
      }
    },
    "/api/employees": {
      "get": {
        "summary": "Obtener todos los empleados",
        "tags": [
          "Employees"
        ],
        "responses": {
          "200": {
            "description": "Lista de empleados"
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo empleado",
        "tags": [
          "Employees"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "first_name",
                  "start_date",
                  "status",
                  "gender",
                  "email",
                  "address",
                  "mobile_phone"
                ],
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "ON_LEAVE",
                      "TERMINATED"
                    ]
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "MALE",
                      "FEMALE",
                      "UNSPECIFIED"
                    ]
                  },
                  "birth_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "address": {
                    "type": "string"
                  },
                  "mobile_phone": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Empleado creado exitosamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "401": {
            "description": "No autorizado"
          },
          "409": {
            "description": "Email ya existe o usuario ya tiene empleado asociado"
          }
        }
      }
    },
    "/api/employees/{id}": {
      "get": {
        "summary": "Obtener un empleado por ID",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del empleado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar empleado por ID",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Empleado actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar empleado por ID",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/employees/user/{userId}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Obtener empleado por ID de usuario",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del empleado"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Empleado no encontrado"
          }
        }
      }
    },
    "/api/inventory/purchase-order/{purchaseOrderId}/receive": {
      "post": {
        "summary": "Recibir mercancía de una orden de compra",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "purchaseOrderId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "items"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "product_id",
                        "quantity",
                        "unit_cost"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "integer"
                        },
                        "quantity": {
                          "type": "integer"
                        },
                        "unit_cost": {
                          "type": "number"
                        },
                        "notes": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mercancía recibida exitosamente"
          }
        }
      }
    },
    "/api/inventory/{businessId}/{productId}/adjust": {
      "post": {
        "summary": "Ajustar inventario (mermas, daños, etc.)",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity",
                  "reason"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "Cantidad positiva para entrada, negativa para salida"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Motivo del ajuste"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inventario ajustado exitosamente"
          }
        }
      }
    },
    "/api/inventory/transfer/{fromBusinessId}/{toBusinessId}/{productId}": {
      "post": {
        "summary": "Transferir inventario entre negocios",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fromBusinessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toBusinessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transferencia realizada exitosamente"
          }
        }
      }
    },
    "/api/inventory/{businessId}/{productId}/stock": {
      "get": {
        "summary": "Obtener stock actual de un producto",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock actual del producto"
          }
        }
      }
    },
    "/api/inventory/{businessId}/low-stock": {
      "get": {
        "summary": "Obtener productos con stock bajo",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos con stock bajo"
          }
        }
      }
    },
    "/api/inventory/{businessId}/history": {
      "get": {
        "summary": "Obtener historial de transacciones de inventario",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "productId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historial de transacciones"
          }
        }
      }
    },
    "/api/inventory/{businessId}/report": {
      "get": {
        "summary": "Generar reporte de inventario",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reporte de inventario"
          }
        }
      }
    },
    "/api/inventory/{businessId}/{productId}/add": {
      "post": {
        "summary": "Agregar stock al inventario",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity",
                  "unit_cost",
                  "transaction_type"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer"
                  },
                  "unit_cost": {
                    "type": "number"
                  },
                  "transaction_type": {
                    "type": "string",
                    "enum": [
                      "PURCHASE",
                      "ADJUSTMENT",
                      "TRANSFER",
                      "RETURN"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock agregado exitosamente"
          }
        }
      }
    },
    "/api/inventory/{businessId}/{productId}/remove": {
      "post": {
        "summary": "Remover stock del inventario",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity",
                  "unit_cost",
                  "transaction_type"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer"
                  },
                  "unit_cost": {
                    "type": "number"
                  },
                  "transaction_type": {
                    "type": "string",
                    "enum": [
                      "SALE",
                      "ADJUSTMENT",
                      "TRANSFER",
                      "DAMAGED",
                      "EXPIRED",
                      "THEFT",
                      "LOSS"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock removido exitosamente"
          }
        }
      }
    },
    "/api/kardex": {
      "get": {
        "summary": "Listar todos los movimientos de stock",
        "tags": [
          "Kardex"
        ],
        "responses": {
          "200": {
            "description": "Lista de movimientos"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo movimiento de stock",
        "tags": [
          "Kardex"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kardex"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Movimiento creado"
          }
        }
      }
    },
    "/api/kardex/{id}": {
      "get": {
        "summary": "Obtener movimiento de stock por ID",
        "tags": [
          "Kardex"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movimiento encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar movimiento de stock",
        "tags": [
          "Kardex"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kardex"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Movimiento actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar movimiento de stock",
        "tags": [
          "Kardex"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/mermas": {
      "get": {
        "summary": "Listar todas las mermas",
        "tags": [
          "Mermas"
        ],
        "responses": {
          "200": {
            "description": "Lista de mermas"
          }
        }
      },
      "post": {
        "summary": "Crear nueva merma",
        "tags": [
          "Mermas"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Merma"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Merma creada"
          }
        }
      }
    },
    "/api/mermas/{id}": {
      "get": {
        "summary": "Obtener merma por ID",
        "tags": [
          "Mermas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Merma encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar merma",
        "tags": [
          "Mermas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Merma"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Merma actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar merma",
        "tags": [
          "Mermas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/permissions": {
      "get": {
        "summary": "Obtener todos los permisos",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de permisos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo permiso",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permiso creado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "400": {
            "description": "Error de validación o datos inválidos"
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "summary": "Obtener un permiso por ID",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permiso encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "404": {
            "description": "Permiso no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar un permiso existente",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permiso actualizado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "404": {
            "description": "Permiso no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar un permiso por ID",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Permiso eliminado correctamente"
          },
          "404": {
            "description": "Permiso no encontrado"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "summary": "Listar todos los productos",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Lista de productos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear nuevo producto",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Producto creado"
          },
          "400": {
            "description": "Código de barras duplicado"
          }
        }
      }
    },
    "/api/products/category/{categoryId}": {
      "get": {
        "summary": "Obtener productos por categoría",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos filtrados por categoría",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Categoría no encontrada o sin productos"
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Obtener producto por ID",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar producto",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Producto actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar producto",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Producto eliminado"
          }
        }
      }
    },
    "/api/purchase-orders": {
      "get": {
        "summary": "Listar todas las órdenes de compra",
        "tags": [
          "PurchaseOrders"
        ],
        "responses": {
          "200": {
            "description": "Lista de órdenes de compra"
          }
        }
      },
      "post": {
        "summary": "Crear nueva orden de compra",
        "tags": [
          "PurchaseOrders"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Orden de compra creada"
          }
        }
      }
    },
    "/api/purchase-orders/{id}": {
      "get": {
        "summary": "Obtener orden de compra por ID",
        "tags": [
          "PurchaseOrders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orden de compra encontrada"
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualizar orden de compra",
        "tags": [
          "PurchaseOrders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Orden de compra actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar orden de compra",
        "tags": [
          "PurchaseOrders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Orden eliminada exitosamente"
          }
        }
      }
    },
    "/api/purchase-order-items": {
      "get": {
        "summary": "Listar todos los ítems de órdenes de compra",
        "tags": [
          "PurchaseOrderItems"
        ],
        "responses": {
          "200": {
            "description": "Lista de ítems"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo ítem en orden de compra",
        "tags": [
          "PurchaseOrderItems"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ítem creado"
          }
        }
      }
    },
    "/api/purchase-order-items/{id}": {
      "get": {
        "summary": "Obtener ítem de orden de compra por ID",
        "tags": [
          "PurchaseOrderItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ítem encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar ítem de orden de compra",
        "tags": [
          "PurchaseOrderItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ítem actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar ítem de orden de compra",
        "tags": [
          "PurchaseOrderItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "summary": "Obtener todos los roles",
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "Lista de roles"
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo rol",
        "tags": [
          "Roles"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rol creado"
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "summary": "Obtener un rol por ID",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rol encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar un rol",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rol actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar un rol",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado"
          }
        }
      }
    },
    "/api/role-permissions": {
      "get": {
        "summary": "Listar todas las asignaciones de permisos a roles",
        "tags": [
          "RolePermissions"
        ],
        "responses": {
          "200": {
            "description": "Lista de asignaciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RolePermission"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear una nueva asignación rol-permiso",
        "tags": [
          "RolePermissions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "roleId",
                  "permissionId"
                ],
                "properties": {
                  "roleId": {
                    "type": "integer",
                    "example": 1
                  },
                  "permissionId": {
                    "type": "integer",
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asignación creada"
          }
        }
      }
    },
    "/api/role-permissions/{id}": {
      "get": {
        "summary": "Obtener una asignación por ID",
        "tags": [
          "RolePermissions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asignación encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePermission"
                }
              }
            }
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualizar una asignación rol-permiso",
        "tags": [
          "RolePermissions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "roleId",
                  "permissionId"
                ],
                "properties": {
                  "roleId": {
                    "type": "integer"
                  },
                  "permissionId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asignación actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar una asignación rol-permiso",
        "tags": [
          "RolePermissions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado correctamente"
          }
        }
      }
    },
    "/api/sales": {
      "get": {
        "summary": "Listar todas las ventas",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sale"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear una nueva venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "business_id",
                  "cart_id",
                  "user_id",
                  "payment_method"
                ],
                "properties": {
                  "business_id": {
                    "type": "integer"
                  },
                  "cart_id": {
                    "type": "integer"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "customer_id": {
                    "type": "integer"
                  },
                  "payment_method": {
                    "type": "string",
                    "enum": [
                      "CASH",
                      "CREDIT_CARD",
                      "DEBIT_CARD",
                      "BANK_TRANSFER",
                      "MOBILE_PAYMENT",
                      "GIFT_CARD",
                      "LOYALTY_POINTS",
                      "QR_PAYMENT",
                      "ELECTRONIC_WALLET"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venta creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          }
        }
      }
    },
    "/api/sales/{id}": {
      "get": {
        "summary": "Obtener venta por ID",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venta encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          },
          "404": {
            "description": "Venta no encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualizar venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "PENDING",
                      "COMPLETED",
                      "CANCELLED",
                      "REFUNDED",
                      "PARTIALLY_REFUNDED"
                    ]
                  },
                  "payment_status": {
                    "type": "string",
                    "enum": [
                      "PENDING",
                      "PAID",
                      "FAILED",
                      "REFUNDED",
                      "PARTIALLY_REFUNDED"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta actualizada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Eliminar venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Venta eliminada exitosamente"
          }
        }
      }
    },
    "/api/sales/business/{businessId}": {
      "get": {
        "summary": "Obtener ventas por negocio",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas del negocio"
          }
        }
      }
    },
    "/api/sales/customer/{customerId}": {
      "get": {
        "summary": "Obtener ventas por cliente",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas del cliente"
          }
        }
      }
    },
    "/api/sales/date-range": {
      "get": {
        "summary": "Obtener ventas por rango de fechas",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "businessId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas en el rango de fechas"
          }
        }
      }
    },
    "/api/sales/process": {
      "post": {
        "summary": "Procesar venta desde carrito",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cartId",
                  "paymentMethod"
                ],
                "properties": {
                  "cartId": {
                    "type": "integer"
                  },
                  "customerId": {
                    "type": "integer"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "CASH",
                      "CREDIT_CARD",
                      "DEBIT_CARD",
                      "BANK_TRANSFER",
                      "MOBILE_PAYMENT",
                      "GIFT_CARD",
                      "LOYALTY_POINTS",
                      "QR_PAYMENT",
                      "ELECTRONIC_WALLET"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venta procesada exitosamente"
          }
        }
      }
    },
    "/api/sales/{id}/cancel": {
      "post": {
        "summary": "Cancelar venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta cancelada exitosamente"
          }
        }
      }
    },
    "/api/sales/{id}/refund": {
      "post": {
        "summary": "Reembolsar venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "reason"
                ],
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reembolso procesado exitosamente"
          }
        }
      }
    },
    "/api/sale-items": {
      "get": {
        "summary": "Listar todos los ítems de venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ítems de venta",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo ítem de venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sale_id",
                  "product_id",
                  "quantity",
                  "unit_price"
                ],
                "properties": {
                  "sale_id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "unit_price": {
                    "type": "number"
                  },
                  "tax_rate": {
                    "type": "number",
                    "default": 13
                  },
                  "discount_amount": {
                    "type": "number",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ítem de venta creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/sale-items/{id}": {
      "get": {
        "summary": "Obtener ítem de venta por ID",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ítem de venta encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItem"
                }
              }
            }
          },
          "404": {
            "description": "Ítem de venta no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar ítem de venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer"
                  },
                  "unit_price": {
                    "type": "number"
                  },
                  "tax_rate": {
                    "type": "number"
                  },
                  "discount_amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ítem de venta actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Eliminar ítem de venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Ítem de venta eliminado exitosamente"
          }
        }
      }
    },
    "/api/sale-items/sale/{saleId}": {
      "get": {
        "summary": "Obtener ítems de venta por venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ítems de la venta"
          }
        }
      }
    },
    "/api/sale-items/product/{productId}": {
      "get": {
        "summary": "Obtener ítems de venta por producto",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ítems del producto"
          }
        }
      }
    },
    "/api/suppliers": {
      "get": {
        "summary": "Listar todos los proveedores",
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "Lista de proveedores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear nuevo proveedor",
        "tags": [
          "Suppliers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Proveedor creado"
          },
          "400": {
            "description": "NIT duplicado"
          }
        }
      }
    },
    "/api/suppliers/{id}": {
      "get": {
        "summary": "Obtener proveedor por ID",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Proveedor encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar proveedor",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Proveedor actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar proveedor",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Proveedor eliminado"
          }
        }
      }
    },
    "/api/supplier-debts": {
      "get": {
        "summary": "Listar todas las deudas a proveedores",
        "tags": [
          "SupplierDebts"
        ],
        "responses": {
          "200": {
            "description": "Lista de deudas"
          }
        }
      },
      "post": {
        "summary": "Crear nueva deuda a proveedor",
        "tags": [
          "SupplierDebts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDebt"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deuda registrada"
          }
        }
      }
    },
    "/api/supplier-debts/{id}": {
      "get": {
        "summary": "Obtener deuda de proveedor por ID",
        "tags": [
          "SupplierDebts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deuda encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar saldo restante de deuda",
        "tags": [
          "SupplierDebts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remaining_amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deuda actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar deuda de proveedor",
        "tags": [
          "SupplierDebts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deuda eliminada"
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "summary": "Listar todas las ventas",
        "tags": [
          "Transactions"
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas"
          }
        }
      },
      "post": {
        "summary": "Registrar una nueva venta",
        "tags": [
          "Transactions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venta registrada"
          }
        }
      }
    },
    "/api/transactions/{id}": {
      "get": {
        "summary": "Obtener venta por ID",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venta encontrada"
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualizar datos de una venta",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar venta",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Venta eliminada exitosamente"
          }
        }
      }
    },
    "/api/transaction-items": {
      "get": {
        "summary": "Listar todos los productos vendidos",
        "tags": [
          "TransactionItems"
        ],
        "responses": {
          "200": {
            "description": "Lista de productos vendidos"
          }
        }
      },
      "post": {
        "summary": "Agregar producto a una venta",
        "tags": [
          "TransactionItems"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "transaction_id",
                  "product_id",
                  "quantity",
                  "price_at_sale"
                ],
                "properties": {
                  "transaction_id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "price_at_sale": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Producto registrado en la venta"
          }
        }
      }
    },
    "/api/transaction-items/{id}": {
      "get": {
        "summary": "Obtener producto vendido por ID",
        "tags": [
          "TransactionItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto vendido encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar datos de producto vendido",
        "tags": [
          "TransactionItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer"
                  },
                  "price_at_sale": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Producto actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar producto de la venta",
        "tags": [
          "TransactionItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Producto eliminado"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Listar todos los usuarios",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Lista de usuarios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear nuevo usuario",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password",
                  "role_id"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role_id": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado"
          },
          "400": {
            "description": "Username duplicado o datos inválidos"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Obtener usuario por ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar usuario",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_id": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "avatar_url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar usuario",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "AuditCashRegisters",
      "description": "Auditoría de acciones sobre cajas"
    },
    {
      "name": "AuditLogs",
      "description": "Auditoría general del sistema"
    },
    {
      "name": "Auth",
      "description": "Endpoints de autenticación"
    },
    {
      "name": "Business",
      "description": "Gestión de negocios"
    },
    {
      "name": "BusinessOrgCharts",
      "description": "Organización interna de empleados"
    },
    {
      "name": "BusinessProducts",
      "description": "Productos personalizados por negocio"
    },
    {
      "name": "BusinessTypes",
      "description": "Tipos de negocios"
    },
    {
      "name": "Carts",
      "description": "Gestión de carritos de compra"
    },
    {
      "name": "CartItems",
      "description": "Productos dentro de carritos de compra"
    },
    {
      "name": "CashRegisters",
      "description": "Gestión de apertura y cierre de cajas"
    },
    {
      "name": "Categories",
      "description": "Gestión de categorías de productos"
    },
    {
      "name": "Consignments",
      "description": "Gestión de consignaciones"
    },
    {
      "name": "ConsignmentItems",
      "description": "Gestión de productos consignados"
    },
    {
      "name": "Credits",
      "description": "Gestión de créditos de clientes"
    },
    {
      "name": "Customers",
      "description": "Gestión de clientes"
    },
    {
      "name": "DebtPayments",
      "description": "Pagos de deudas a proveedores"
    },
    {
      "name": "Employees",
      "description": "Endpoints para gestión de empleados"
    },
    {
      "name": "Inventory",
      "description": "Gestión de inventario y stock"
    },
    {
      "name": "Kardex",
      "description": "Gestión de movimientos de stock"
    },
    {
      "name": "Mermas",
      "description": "Gestión de pérdidas o deterioros de productos"
    },
    {
      "name": "Permissions",
      "description": "Endpoints para gestión de permisos del sistema"
    },
    {
      "name": "Products",
      "description": "Gestión de productos"
    },
    {
      "name": "PurchaseOrders",
      "description": "Gestión de órdenes de compra"
    },
    {
      "name": "PurchaseOrderItems",
      "description": "Detalle de productos en órdenes de compra"
    },
    {
      "name": "Roles",
      "description": "Gestión de roles de usuario"
    },
    {
      "name": "RolePermissions",
      "description": "Asignación de permisos a roles"
    },
    {
      "name": "Sales",
      "description": "Gestión de ventas"
    },
    {
      "name": "SaleItems",
      "description": "Gestión de ítems de venta"
    },
    {
      "name": "Suppliers",
      "description": "Gestión de proveedores"
    },
    {
      "name": "SupplierDebts",
      "description": "Deudas con proveedores"
    },
    {
      "name": "Transactions",
      "description": "Gestión de ventas realizadas"
    },
    {
      "name": "TransactionItems",
      "description": "Productos vendidos en cada transacción"
    },
    {
      "name": "Users",
      "description": "Gestión de usuarios"
    }
  ]
}