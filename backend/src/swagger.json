{
  "openapi": "3.0.0",
  "info": {
    "title": "üè™ Super Tienda API",
    "version": "1.0.0",
    "description": "",
    "contact": {
      "name": "Super Tienda",
      "url": "https://www.supertienda.com",
      "email": "contacto@supertienda.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "juan.perez"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "+591 70012345"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PENDING_VERIFICATION"
            ],
            "example": "ACTIVE"
          },
          "roleId": {
            "type": "integer",
            "example": 2
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-15T09:00:00Z"
          },
          "role": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 2
              },
              "code": {
                "type": "string",
                "example": "EMP"
              },
              "name": {
                "type": "string",
                "example": "Empleado"
              },
              "description": {
                "type": "string",
                "nullable": true,
                "example": "Empleado del negocio"
              }
            },
            "required": [
              "id",
              "code",
              "name"
            ]
          },
          "employee": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "firstName": {
                "type": "string",
                "example": "Juan"
              },
              "lastName": {
                "type": "string",
                "nullable": true,
                "example": "P√©rez"
              },
              "position": {
                "type": "string",
                "example": "Vendedor"
              },
              "department": {
                "type": "string",
                "nullable": true,
                "example": "Ventas"
              },
              "startDate": {
                "type": "string",
                "format": "date",
                "example": "2024-01-01"
              },
              "endDate": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "salary": {
                "type": "number",
                "nullable": true,
                "example": 5000
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "INACTIVE",
                  "ON_LEAVE",
                  "TERMINATED"
                ],
                "example": "ACTIVE"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "MALE",
                  "FEMALE",
                  "OTHER"
                ],
                "example": "MALE"
              },
              "birthDate": {
                "type": "string",
                "format": "date",
                "nullable": true,
                "example": "1990-05-15"
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true,
                "example": "juan.perez@empresa.com"
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "example": "+591 70012345"
              },
              "address": {
                "type": "string",
                "nullable": true,
                "example": "Av. Principal 123"
              },
              "emergencyContact": {
                "type": "string",
                "nullable": true,
                "example": "Mar√≠a P√©rez"
              },
              "emergencyPhone": {
                "type": "string",
                "nullable": true,
                "example": "+591 70054321"
              },
              "ciNumber": {
                "type": "string",
                "nullable": true,
                "example": "12345678"
              },
              "businessId": {
                "type": "integer",
                "example": 1
              }
            },
            "required": [
              "id",
              "firstName",
              "position",
              "startDate",
              "status",
              "gender",
              "businessId"
            ]
          }
        },
        "required": [
          "id",
          "username",
          "status",
          "roleId",
          "createdAt",
          "updatedAt",
          "role"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermission"
            }
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "module": {
            "type": "string",
            "default": ""
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermission"
            }
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "RolePermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "roleId": {
            "type": "integer"
          },
          "permissionId": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          }
        },
        "required": [
          "roleId",
          "permissionId"
        ]
      },
      "Business": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "legalName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "nit": {
            "type": "string"
          },
          "businessType": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "defaultTaxRate": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer"
          },
          "updatedBy": {
            "type": "integer"
          },
          "deletedBy": {
            "type": "integer"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeBasic"
            }
          },
          "fiscalSettings": {
            "$ref": "#/components/schemas/FiscalSettingsBasic"
          }
        },
        "required": [
          "id",
          "name",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "FiscalSettings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer"
          },
          "authorizationNumber": {
            "type": "string"
          },
          "activityCode": {
            "type": "string"
          },
          "lawNumber": {
            "type": "string"
          },
          "invoiceSeries": {
            "type": "string"
          },
          "invoiceStartNumber": {
            "type": "integer",
            "default": 1
          },
          "invoiceCurrentNumber": {
            "type": "integer",
            "default": 1
          },
          "invoiceEndNumber": {
            "type": "integer"
          },
          "isElectronic": {
            "type": "boolean",
            "default": true
          },
          "siatUrl": {
            "type": [
              "string",
              "null"
            ]
          },
          "siatToken": {
            "type": [
              "string",
              "null"
            ]
          },
          "siatEnvironment": {
            "type": "string",
            "default": "TEST"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          }
        },
        "required": [
          "businessId",
          "authorizationNumber",
          "activityCode",
          "lawNumber",
          "invoiceSeries",
          "invoiceEndNumber"
        ]
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer",
            "default": 1
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": [
              "string",
              "null"
            ]
          },
          "position": {
            "type": "string"
          },
          "department": {
            "type": [
              "string",
              "null"
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "salary": {
            "type": [
              "number",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "ON_LEAVE",
              "TERMINATED",
              "RETIRED"
            ]
          },
          "gender": {
            "type": "string",
            "default": "UNSPECIFIED",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER",
              "UNSPECIFIED"
            ]
          },
          "birthDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "address": {
            "type": [
              "string",
              "null"
            ]
          },
          "emergencyContact": {
            "type": [
              "string",
              "null"
            ]
          },
          "emergencyPhone": {
            "type": [
              "string",
              "null"
            ]
          },
          "ciNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          }
        },
        "required": [
          "userId",
          "firstName",
          "position",
          "startDate"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "parentId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "sortOrder": {
            "type": "integer",
            "default": 0
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category"
              },
              {
                "type": "null"
              }
            ]
          },
          "childrens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "categoryId": {
            "type": "integer"
          },
          "sku": {
            "type": [
              "string",
              "null"
            ]
          },
          "barcode": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "brand": {
            "type": [
              "string",
              "null"
            ]
          },
          "model": {
            "type": [
              "string",
              "null"
            ]
          },
          "unit": {
            "type": [
              "string",
              "null"
            ],
            "default": "pcs"
          },
          "weight": {
            "type": [
              "number",
              "null"
            ]
          },
          "dimensions": {
            "type": [
              "string",
              "null"
            ]
          },
          "costPrice": {
            "type": "number",
            "default": 0
          },
          "sellingPrice": {
            "type": "number",
            "default": 0
          },
          "taxType": {
            "type": "string",
            "default": "IVA_13",
            "enum": [
              "IVA_13",
              "IVA_0",
              "EXENTO",
              "ICE",
              "IT",
              "IUE"
            ]
          },
          "taxRate": {
            "type": "number",
            "default": 13
          },
          "minStock": {
            "type": "integer",
            "default": 0
          },
          "maxStock": {
            "type": [
              "integer",
              "null"
            ]
          },
          "reorderPoint": {
            "type": "integer",
            "default": 0
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DISCONTINUED",
              "OUT_OF_STOCK"
            ]
          },
          "expiryDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "businessProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessProduct"
            }
          },
          "cartItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "saleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItem"
            }
          },
          "purchaseOrderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderItem"
            }
          }
        },
        "required": [
          "categoryId",
          "name"
        ]
      },
      "BusinessProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer"
          },
          "productId": {
            "type": "integer"
          },
          "customPrice": {
            "type": "number"
          },
          "currentStock": {
            "type": "integer",
            "default": 0
          },
          "reservedStock": {
            "type": "integer",
            "default": 0
          },
          "availableStock": {
            "type": "integer",
            "default": 0
          },
          "lastRestock": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "required": [
          "businessId",
          "productId",
          "customPrice"
        ]
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer",
            "default": 1
          },
          "code": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": "string"
          },
          "documentType": {
            "type": "string",
            "default": "NIT",
            "enum": [
              "NIT",
              "CI",
              "PASSPORT",
              "FOREIGN_ID"
            ]
          },
          "documentNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "contactPerson": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "address": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "department": {
            "type": [
              "string",
              "null"
            ],
            "default": "LA_PAZ",
            "enum": [
              "LA_PAZ",
              "COCHABAMBA",
              "SANTA_CRUZ",
              "ORURO",
              "POTOSI",
              "CHUQUISACA",
              "TARIJA",
              "BENI",
              "PANDO"
            ]
          },
          "country": {
            "type": "string",
            "default": "Bolivia"
          },
          "postalCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "paymentTerms": {
            "type": "integer",
            "default": 30
          },
          "creditLimit": {
            "type": [
              "number",
              "null"
            ]
          },
          "currentBalance": {
            "type": "number",
            "default": 0
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "purchaseOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrder"
            }
          },
          "supplierDebts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierDebt"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer",
            "default": 1
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": [
              "string",
              "null"
            ]
          },
          "documentType": {
            "type": "string",
            "default": "CI",
            "enum": [
              "NIT",
              "CI",
              "PASSPORT",
              "FOREIGN_ID"
            ]
          },
          "documentNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "address": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "department": {
            "type": [
              "string",
              "null"
            ],
            "default": "LA_PAZ",
            "enum": [
              "LA_PAZ",
              "COCHABAMBA",
              "SANTA_CRUZ",
              "ORURO",
              "POTOSI",
              "CHUQUISACA",
              "TARIJA",
              "BENI",
              "PANDO"
            ]
          },
          "country": {
            "type": "string",
            "default": "Bolivia"
          },
          "postalCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "creditLimit": {
            "type": [
              "number",
              "null"
            ]
          },
          "currentBalance": {
            "type": "number",
            "default": 0
          },
          "loyaltyPoints": {
            "type": "integer",
            "default": 0
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "carts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cart"
            }
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sale"
            }
          },
          "customerDebts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerDebt"
            }
          }
        },
        "required": [
          "firstName"
        ]
      },
      "PurchaseOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer",
            "default": 1
          },
          "supplierId": {
            "type": "integer"
          },
          "poNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "DRAFT",
            "enum": [
              "DRAFT",
              "PENDING",
              "APPROVED",
              "ORDERED",
              "PARTIALLY_RECEIVED",
              "RECEIVED",
              "CANCELLED"
            ]
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "expectedDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "receivedDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "subtotal": {
            "type": "number",
            "default": 0
          },
          "taxAmount": {
            "type": "number",
            "default": 0
          },
          "totalAmount": {
            "type": "number",
            "default": 0
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "approvedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "supplier": {
            "$ref": "#/components/schemas/Supplier"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderItem"
            }
          },
          "supplierDebts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplierDebt"
            }
          },
          "User": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "userId": {
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "required": [
          "supplierId"
        ]
      },
      "PurchaseOrderItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "purchaseOrderId": {
            "type": "integer"
          },
          "productId": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "unitCost": {
            "type": "number"
          },
          "receivedQuantity": {
            "type": "integer",
            "default": 0
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseOrder": {
            "$ref": "#/components/schemas/PurchaseOrder"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "required": [
          "purchaseOrderId",
          "productId",
          "quantity",
          "unitCost"
        ]
      },
      "SupplierDebt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "supplierId": {
            "type": "integer"
          },
          "purchaseOrderId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "amount": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number",
            "default": 0
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "isPaid": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "paidAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "supplier": {
            "$ref": "#/components/schemas/Supplier"
          },
          "purchaseOrder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PurchaseOrder"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "supplierId",
          "amount",
          "dueDate"
        ]
      },
      "Cart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "customerId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "ACTIVE",
            "enum": [
              "ACTIVE",
              "PROCESSING",
              "COMPLETED",
              "ABANDONED"
            ]
          },
          "subtotal": {
            "type": "number",
            "default": 0
          },
          "taxAmount": {
            "type": "number",
            "default": 0
          },
          "totalAmount": {
            "type": "number",
            "default": 0
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "customer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Customer"
              },
              {
                "type": "null"
              }
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "sale": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Sale"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "businessId",
          "userId"
        ]
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "cartId": {
            "type": "integer"
          },
          "productId": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "unitPrice": {
            "type": "number"
          },
          "taxRate": {
            "type": "number",
            "default": 13
          },
          "taxAmount": {
            "type": "number",
            "default": 0
          },
          "totalPrice": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "cart": {
            "$ref": "#/components/schemas/Cart"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "required": [
          "cartId",
          "productId",
          "quantity",
          "unitPrice",
          "totalPrice"
        ]
      },
      "Sale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer"
          },
          "cartId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "customerId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "invoiceNumber": {
            "type": "string"
          },
          "invoiceType": {
            "type": "string",
            "default": "FACTURA",
            "enum": [
              "FACTURA",
              "FACTURA_EXENTA",
              "NOTA_CREDITO",
              "NOTA_DEBITO",
              "GUIA_REMISION",
              "COMPROBANTE_ALQUILER",
              "NOTA_SIMPLE"
            ]
          },
          "authorizationCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "controlCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "string",
            "default": "COMPLETED",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED",
              "REFUNDED",
              "PARTIALLY_REFUNDED"
            ]
          },
          "subtotal": {
            "type": "number"
          },
          "taxAmount": {
            "type": "number"
          },
          "discountAmount": {
            "type": "number",
            "default": 0
          },
          "totalAmount": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CASH",
              "CREDIT_CARD",
              "DEBIT_CARD",
              "BANK_TRANSFER",
              "MOBILE_PAYMENT",
              "GIFT_CARD",
              "LOYALTY_POINTS",
              "QR_PAYMENT",
              "ELECTRONIC_WALLET"
            ]
          },
          "paymentStatus": {
            "type": "string",
            "default": "PENDING",
            "enum": [
              "PENDING",
              "PAID",
              "FAILED",
              "REFUNDED",
              "PARTIALLY_REFUNDED"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "cart": {
            "$ref": "#/components/schemas/Cart"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "customer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Customer"
              },
              {
                "type": "null"
              }
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItem"
            }
          },
          "customerDebts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerDebt"
            }
          },
          "CashRegister": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CashRegister"
              },
              {
                "type": "null"
              }
            ]
          },
          "cashRegisterId": {
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "required": [
          "businessId",
          "cartId",
          "userId",
          "invoiceNumber",
          "subtotal",
          "taxAmount",
          "totalAmount",
          "paymentMethod"
        ]
      },
      "SaleItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "saleId": {
            "type": "integer"
          },
          "productId": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "unitPrice": {
            "type": "number"
          },
          "taxRate": {
            "type": "number",
            "default": 13
          },
          "taxAmount": {
            "type": "number"
          },
          "discountAmount": {
            "type": "number",
            "default": 0
          },
          "totalPrice": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "sale": {
            "$ref": "#/components/schemas/Sale"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "required": [
          "saleId",
          "productId",
          "quantity",
          "unitPrice",
          "taxAmount",
          "totalPrice"
        ]
      },
      "CustomerDebt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "customerId": {
            "type": "integer"
          },
          "saleId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "amount": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number",
            "default": 0
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "isPaid": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "paidAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "sale": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Sale"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "customerId",
          "amount",
          "dueDate"
        ]
      },
      "CashRegister": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "registerNumber": {
            "type": "string"
          },
          "openingAmount": {
            "type": "number"
          },
          "closingAmount": {
            "type": [
              "number",
              "null"
            ]
          },
          "currentAmount": {
            "type": "number"
          },
          "openingDate": {
            "type": "string",
            "format": "date-time"
          },
          "closingDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "default": "OPEN",
            "enum": [
              "OPEN",
              "CLOSED",
              "SUSPENDED"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "default": 0
          },
          "updatedBy": {
            "type": "integer",
            "default": 0
          },
          "deletedBy": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sale"
            }
          },
          "auditLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditCashRegister"
            }
          }
        },
        "required": [
          "businessId",
          "userId",
          "registerNumber",
          "openingAmount",
          "currentAmount"
        ]
      },
      "InventoryTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": "integer"
          },
          "productId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "PURCHASE",
              "SALE",
              "ADJUSTMENT",
              "TRANSFER",
              "RETURN",
              "DAMAGED",
              "EXPIRED",
              "THEFT",
              "LOSS"
            ]
          },
          "quantity": {
            "type": "integer"
          },
          "unitCost": {
            "type": "number"
          },
          "totalCost": {
            "type": "number"
          },
          "referenceId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "referenceType": {
            "type": [
              "string",
              "null"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "businessId",
          "productId",
          "userId",
          "transactionType",
          "quantity",
          "unitCost",
          "totalCost"
        ]
      },
      "AuditLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "businessId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "userId": {
            "type": "integer"
          },
          "action": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "entityId": {
            "type": "integer"
          },
          "oldValues": {
            "type": [
              "number",
              "string",
              "boolean",
              "object",
              "array",
              "null"
            ]
          },
          "newValues": {
            "type": [
              "number",
              "string",
              "boolean",
              "object",
              "array",
              "null"
            ]
          },
          "ipAddress": {
            "type": [
              "string",
              "null"
            ]
          },
          "userAgent": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "business": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Business"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "userId",
          "action",
          "entity",
          "entityId"
        ]
      },
      "AuditCashRegister": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "cashRegisterId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "action": {
            "type": "string"
          },
          "amount": {
            "type": [
              "number",
              "null"
            ]
          },
          "details": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "cashRegister": {
            "$ref": "#/components/schemas/CashRegister"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "cashRegisterId",
          "userId",
          "action"
        ]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token de acceso",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "Token para renovar el acceso",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID del usuario",
                "example": 1
              },
              "username": {
                "type": "string",
                "description": "Nombre de usuario",
                "example": "admin"
              },
              "role": {
                "type": "string",
                "description": "Rol del usuario",
                "example": "ADMIN"
              },
              "employee": {
                "type": "object",
                "nullable": true,
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "Nombre del empleado",
                    "example": "Juan"
                  },
                  "lastName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Apellido del empleado",
                    "example": "P√©rez"
                  },
                  "position": {
                    "type": "string",
                    "description": "Cargo del empleado",
                    "example": "Gerente"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Fecha de inicio",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "ON_LEAVE",
                      "TERMINATED",
                      "RETIRED"
                    ],
                    "description": "Estado del empleado",
                    "example": "ACTIVE"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "MALE",
                      "FEMALE",
                      "OTHER",
                      "UNSPECIFIED"
                    ],
                    "description": "G√©nero del empleado",
                    "example": "MALE"
                  },
                  "birthDate": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true,
                    "description": "Fecha de nacimiento",
                    "example": "1990-01-01T00:00:00Z"
                  },
                  "email": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email del empleado",
                    "example": "juan.perez@empresa.com"
                  },
                  "address": {
                    "type": "string",
                    "nullable": true,
                    "description": "Direcci√≥n del empleado",
                    "example": "Av. Principal 123"
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true,
                    "description": "Tel√©fono del empleado",
                    "example": "+591 70012345"
                  },
                  "businessId": {
                    "type": "integer",
                    "description": "ID del negocio",
                    "example": 1
                  }
                }
              }
            },
            "required": [
              "id",
              "username",
              "role"
            ]
          }
        },
        "required": [
          "token",
          "refreshToken",
          "user"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Nombre de usuario",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "description": "Contrase√±a",
            "example": "password123"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "description": "Contrase√±a actual",
            "example": "oldpassword123"
          },
          "newPassword": {
            "type": "string",
            "description": "Nueva contrase√±a",
            "example": "newpassword123"
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Token de renovaci√≥n",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "UserBasic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "juan.perez"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "+591 70012345"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PENDING_VERIFICATION"
            ],
            "example": "ACTIVE"
          },
          "roleId": {
            "type": "integer",
            "example": 2
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-15T10:30:00Z"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2024-01-15T09:00:00Z"
          }
        },
        "required": [
          "id",
          "username",
          "status",
          "roleId",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "juan.perez",
            "minLength": 3,
            "maxLength": 50
          },
          "password": {
            "type": "string",
            "example": "Contrase√±a123!",
            "minLength": 8
          },
          "phone": {
            "type": "string",
            "example": "+591 70012345"
          },
          "roleId": {
            "type": "integer",
            "example": 2
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PENDING_VERIFICATION"
            ],
            "example": "ACTIVE"
          },
          "employee": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "example": "Juan",
                "minLength": 2,
                "maxLength": 50
              },
              "lastName": {
                "type": "string",
                "example": "P√©rez",
                "maxLength": 50
              },
              "position": {
                "type": "string",
                "example": "Vendedor",
                "minLength": 2,
                "maxLength": 100
              },
              "department": {
                "type": "string",
                "example": "Ventas",
                "maxLength": 100
              },
              "startDate": {
                "type": "string",
                "format": "date",
                "example": "2024-01-01"
              },
              "salary": {
                "type": "number",
                "example": 5000,
                "minimum": 0
              },
              "gender": {
                "type": "string",
                "enum": [
                  "MALE",
                  "FEMALE",
                  "OTHER"
                ],
                "example": "MALE"
              },
              "birthDate": {
                "type": "string",
                "format": "date",
                "example": "1990-05-15"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "juan.perez@empresa.com"
              },
              "phone": {
                "type": "string",
                "example": "+591 70012345"
              },
              "address": {
                "type": "string",
                "example": "Av. Principal 123"
              },
              "emergencyContact": {
                "type": "string",
                "example": "Mar√≠a P√©rez"
              },
              "emergencyPhone": {
                "type": "string",
                "example": "+591 70054321"
              },
              "ciNumber": {
                "type": "string",
                "example": "12345678"
              },
              "businessId": {
                "type": "integer",
                "example": 1
              }
            },
            "required": [
              "firstName",
              "position",
              "startDate",
              "gender",
              "businessId"
            ]
          }
        },
        "required": [
          "username",
          "password",
          "roleId"
        ]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "+591 70012345"
          },
          "roleId": {
            "type": "integer",
            "example": 2
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PENDING_VERIFICATION"
            ]
          },
          "employee": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "example": "Juan",
                "minLength": 2,
                "maxLength": 50
              },
              "lastName": {
                "type": "string",
                "example": "P√©rez",
                "maxLength": 50
              },
              "position": {
                "type": "string",
                "example": "Vendedor",
                "minLength": 2,
                "maxLength": 100
              },
              "department": {
                "type": "string",
                "example": "Ventas",
                "maxLength": 100
              },
              "startDate": {
                "type": "string",
                "format": "date",
                "example": "2024-01-01"
              },
              "endDate": {
                "type": "string",
                "format": "date"
              },
              "salary": {
                "type": "number",
                "example": 5000,
                "minimum": 0
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "INACTIVE",
                  "ON_LEAVE",
                  "TERMINATED"
                ]
              },
              "gender": {
                "type": "string",
                "enum": [
                  "MALE",
                  "FEMALE",
                  "OTHER"
                ]
              },
              "birthDate": {
                "type": "string",
                "format": "date",
                "example": "1990-05-15"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "juan.perez@empresa.com"
              },
              "phone": {
                "type": "string",
                "example": "+591 70012345"
              },
              "address": {
                "type": "string",
                "example": "Av. Principal 123"
              },
              "emergencyContact": {
                "type": "string",
                "example": "Mar√≠a P√©rez"
              },
              "emergencyPhone": {
                "type": "string",
                "example": "+591 70054321"
              },
              "ciNumber": {
                "type": "string",
                "example": "12345678"
              },
              "businessId": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "ChangeUserPasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "example": "Contrase√±aActual123!",
            "minLength": 1
          },
          "newPassword": {
            "type": "string",
            "example": "NuevaContrase√±a456!",
            "minLength": 8
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      },
      "ResetUserPasswordRequest": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "example": "NuevaContrase√±a456!",
            "minLength": 8
          }
        },
        "required": [
          "newPassword"
        ]
      },
      "UserFilters": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "PENDING_VERIFICATION"
            ]
          },
          "roleId": {
            "type": "integer",
            "example": 2
          },
          "businessId": {
            "type": "integer",
            "example": 1
          },
          "search": {
            "type": "string",
            "example": "juan",
            "description": "Buscar por username o nombre de empleado"
          },
          "page": {
            "type": "integer",
            "example": 1,
            "minimum": 1,
            "default": 1
          },
          "limit": {
            "type": "integer",
            "example": 10,
            "minimum": 1,
            "maximum": 100,
            "default": 10
          }
        }
      },
      "UserListResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "total": {
            "type": "integer",
            "example": 25
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "totalPages": {
            "type": "integer",
            "example": 3
          },
          "limit": {
            "type": "integer",
            "example": 10
          }
        },
        "required": [
          "users",
          "total",
          "page",
          "totalPages",
          "limit"
        ]
      },
      "UserStats": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 25
          },
          "active": {
            "type": "integer",
            "example": 20
          },
          "inactive": {
            "type": "integer",
            "example": 3
          },
          "suspended": {
            "type": "integer",
            "example": 1
          },
          "pendingVerification": {
            "type": "integer",
            "example": 1
          },
          "byRole": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "roleName": {
                  "type": "string",
                  "example": "Empleado"
                },
                "count": {
                  "type": "integer",
                  "example": 15
                }
              },
              "required": [
                "roleName",
                "count"
              ]
            }
          },
          "byBusiness": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "businessName": {
                  "type": "string",
                  "example": "Mi Negocio"
                },
                "count": {
                  "type": "integer",
                  "example": 10
                }
              },
              "required": [
                "businessName",
                "count"
              ]
            }
          }
        },
        "required": [
          "total",
          "active",
          "inactive",
          "suspended",
          "pendingVerification",
          "byRole",
          "byBusiness"
        ]
      },
      "UserError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Usuario no encontrado"
          },
          "message": {
            "type": "string",
            "example": "El usuario con ID 123 no existe"
          },
          "statusCode": {
            "type": "integer",
            "example": 404
          }
        },
        "required": [
          "error",
          "message",
          "statusCode"
        ]
      },
      "EmployeeBasic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "firstName",
          "position",
          "status"
        ]
      },
      "FiscalSettingsBasic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "authorizationNumber": {
            "type": "string"
          },
          "activityCode": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "authorizationNumber",
          "activityCode"
        ]
      },
      "CreateBusinessRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100
          },
          "legalName": {
            "type": "string",
            "maxLength": 150
          },
          "description": {
            "type": "string"
          },
          "nit": {
            "type": "string",
            "maxLength": 20
          },
          "businessType": {
            "type": "string",
            "enum": [
              "PERSONA_NATURAL",
              "PERSONA_JURIDICA"
            ]
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "maxLength": 20
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "maxLength": 50
          },
          "department": {
            "type": "string",
            "enum": [
              "LA_PAZ",
              "COCHABAMBA",
              "SANTA_CRUZ",
              "ORURO",
              "POTOSI",
              "TARIJA",
              "CHUQUISACA",
              "BENI",
              "PANDO"
            ]
          },
          "country": {
            "type": "string",
            "maxLength": 50
          },
          "postalCode": {
            "type": "string",
            "maxLength": 10
          },
          "logoUrl": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "timezone": {
            "type": "string",
            "maxLength": 50
          },
          "currency": {
            "type": "string",
            "enum": [
              "BOB",
              "USD"
            ]
          },
          "defaultTaxRate": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateBusinessRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100
          },
          "legalName": {
            "type": "string",
            "maxLength": 150
          },
          "description": {
            "type": "string"
          },
          "nit": {
            "type": "string",
            "maxLength": 20
          },
          "businessType": {
            "type": "string",
            "enum": [
              "PERSONA_NATURAL",
              "PERSONA_JURIDICA"
            ]
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "maxLength": 20
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "maxLength": 50
          },
          "department": {
            "type": "string",
            "enum": [
              "LA_PAZ",
              "COCHABAMBA",
              "SANTA_CRUZ",
              "ORURO",
              "POTOSI",
              "TARIJA",
              "CHUQUISACA",
              "BENI",
              "PANDO"
            ]
          },
          "country": {
            "type": "string",
            "maxLength": 50
          },
          "postalCode": {
            "type": "string",
            "maxLength": 10
          },
          "logoUrl": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "timezone": {
            "type": "string",
            "maxLength": 50
          },
          "currency": {
            "type": "string",
            "enum": [
              "BOB",
              "USD"
            ]
          },
          "defaultTaxRate": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          }
        }
      },
      "BusinessListResponse": {
        "type": "object",
        "properties": {
          "businesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Business"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          }
        },
        "required": [
          "businesses",
          "total",
          "page",
          "totalPages",
          "limit"
        ]
      },
      "CashRegisterOpen": {
        "type": "object",
        "required": [
          "registerNumber",
          "openingAmount"
        ],
        "properties": {
          "registerNumber": {
            "type": "string",
            "description": "N√∫mero √∫nico de la caja registradora",
            "example": "CAJA001"
          },
          "openingAmount": {
            "type": "number",
            "description": "Monto inicial de apertura",
            "example": 1000
          },
          "notes": {
            "type": "string",
            "description": "Notas adicionales",
            "example": "Caja principal del local"
          }
        }
      },
      "CashRegisterClose": {
        "type": "object",
        "required": [
          "closingAmount"
        ],
        "properties": {
          "closingAmount": {
            "type": "number",
            "description": "Monto final de cierre",
            "example": 2500
          },
          "notes": {
            "type": "string",
            "description": "Notas del cierre",
            "example": "Cierre normal del d√≠a"
          }
        }
      },
      "CashRegisterSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "registerNumber": {
            "type": "string"
          },
          "openingAmount": {
            "type": "number"
          },
          "closingAmount": {
            "type": "number"
          },
          "currentAmount": {
            "type": "number"
          },
          "openingDate": {
            "type": "string",
            "format": "date-time"
          },
          "closingDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "CLOSED",
              "SUSPENDED"
            ]
          },
          "totalSales": {
            "type": "number"
          },
          "totalCashSales": {
            "type": "number"
          },
          "totalCardSales": {
            "type": "number"
          },
          "totalOtherSales": {
            "type": "number"
          },
          "salesCount": {
            "type": "integer"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtenido del endpoint de login"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Endpoints de autenticaci√≥n y autorizaci√≥n"
    },
    {
      "name": "Users",
      "description": "Gesti√≥n de usuarios, roles y permisos"
    },
    {
      "name": "POS",
      "description": "Sistema de punto de venta y carritos de compra"
    },
    {
      "name": "Cash Register",
      "description": "Gesti√≥n de cajas registradoras y apertura/cierre"
    },
    {
      "name": "Products",
      "description": "Gesti√≥n de productos, categor√≠as e inventario"
    },
    {
      "name": "Sales",
      "description": "Historial de ventas, reportes y an√°lisis"
    },
    {
      "name": "Reports",
      "description": "Reportes, estad√≠sticas y m√©tricas del negocio"
    },
    {
      "name": "AuditCashRegisters",
      "description": "Auditor√≠a de acciones sobre cajas"
    },
    {
      "name": "AuditLogs",
      "description": "Auditor√≠a general del sistema"
    },
    {
      "name": "BusinessProducts",
      "description": "Productos personalizados por negocio"
    },
    {
      "name": "Business",
      "description": "Gesti√≥n de negocios"
    },
    {
      "name": "CartItems",
      "description": "Productos dentro de carritos de compra"
    },
    {
      "name": "Carts",
      "description": "Gesti√≥n de carritos de compra"
    },
    {
      "name": "Categories",
      "description": "Gesti√≥n de categor√≠as de productos"
    },
    {
      "name": "Customers",
      "description": "Gesti√≥n de clientes"
    },
    {
      "name": "Employees",
      "description": "Endpoints para gesti√≥n de empleados"
    },
    {
      "name": "Inventory",
      "description": "Gesti√≥n de inventario y stock"
    },
    {
      "name": "Permissions",
      "description": "Endpoints para gesti√≥n de permisos del sistema"
    },
    {
      "name": "PurchaseOrderItems",
      "description": "Detalle de productos en √≥rdenes de compra"
    },
    {
      "name": "PurchaseOrders",
      "description": "Gesti√≥n de √≥rdenes de compra"
    },
    {
      "name": "RolePermissions",
      "description": "Asignaci√≥n de permisos a roles"
    },
    {
      "name": "Roles",
      "description": "Gesti√≥n de roles de usuario"
    },
    {
      "name": "SaleItems",
      "description": "Gesti√≥n de √≠tems de venta"
    },
    {
      "name": "SupplierDebts",
      "description": "Deudas con proveedores"
    },
    {
      "name": "Suppliers",
      "description": "Gesti√≥n de proveedores"
    }
  ],
  "externalDocs": {
    "description": "Documentaci√≥n adicional",
    "url": "https://docs.supertienda.com"
  },
  "paths": {
    "/api/audit-cash-registers": {
      "get": {
        "summary": "Listar todas las auditor√≠as de cajas",
        "tags": [
          "AuditCashRegisters"
        ],
        "responses": {
          "200": {
            "description": "Lista de auditor√≠as"
          }
        }
      },
      "post": {
        "summary": "Registrar acci√≥n sobre una caja",
        "tags": [
          "AuditCashRegisters"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cashRegisterId",
                  "action",
                  "userId"
                ],
                "properties": {
                  "cashRegisterId": {
                    "type": "integer"
                  },
                  "action": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "integer"
                  },
                  "details": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Auditor√≠a registrada"
          }
        }
      }
    },
    "/api/audit-cash-registers/{id}": {
      "get": {
        "summary": "Obtener auditor√≠a de caja por ID",
        "tags": [
          "AuditCashRegisters"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auditor√≠a encontrada"
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar auditor√≠a de caja",
        "tags": [
          "AuditCashRegisters"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Auditor√≠a eliminada exitosamente"
          }
        }
      }
    },
    "/api/audit-logs": {
      "get": {
        "summary": "Listar todas las auditor√≠as",
        "tags": [
          "AuditLogs"
        ],
        "responses": {
          "200": {
            "description": "Lista de auditor√≠as"
          }
        }
      },
      "post": {
        "summary": "Registrar acci√≥n de auditor√≠a",
        "tags": [
          "AuditLogs"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "action",
                  "entity",
                  "entity_id",
                  "user_id"
                ],
                "properties": {
                  "action": {
                    "type": "string"
                  },
                  "entity": {
                    "type": "string"
                  },
                  "entity_id": {
                    "type": "integer"
                  },
                  "old_values": {
                    "type": "object"
                  },
                  "new_values": {
                    "type": "object"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "ip_address": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Auditor√≠a registrada"
          }
        }
      }
    },
    "/api/audit-logs/{id}": {
      "get": {
        "summary": "Obtener auditor√≠a por ID",
        "tags": [
          "AuditLogs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auditor√≠a encontrada"
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar auditor√≠a",
        "tags": [
          "AuditLogs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Auditor√≠a eliminada"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Iniciar sesi√≥n",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Refrescar token de acceso",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refrescado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/change-password": {
      "post": {
        "summary": "Cambiar contrase√±a",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contrase√±a actualizada exitosamente"
          }
        }
      }
    },
    "/api/auth/verify": {
      "get": {
        "summary": "Verificar token",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token v√°lido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/business-products": {
      "get": {
        "summary": "Listar todos los productos asignados a negocios",
        "tags": [
          "BusinessProducts"
        ],
        "responses": {
          "200": {
            "description": "Lista de asignaciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessProduct"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear una nueva asignaci√≥n de producto a negocio",
        "tags": [
          "BusinessProducts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "businessId",
                  "productId"
                ],
                "properties": {
                  "businessId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  },
                  "customPrice": {
                    "type": "number",
                    "format": "decimal"
                  },
                  "actualStock": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asignaci√≥n creada"
          },
          "400": {
            "description": "Asignaci√≥n duplicada"
          }
        }
      }
    },
    "/api/business-products/{id}": {
      "get": {
        "summary": "Obtener asignaci√≥n de producto por ID",
        "tags": [
          "BusinessProducts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asignaci√≥n encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar asignaci√≥n de producto a negocio",
        "tags": [
          "BusinessProducts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customPrice": {
                    "type": "number"
                  },
                  "actualStock": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asignaci√≥n actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar asignaci√≥n de producto",
        "tags": [
          "BusinessProducts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/businesses": {
      "post": {
        "summary": "Crear un nuevo negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Negocio creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          },
          "400": {
            "description": "Datos inv√°lidos"
          },
          "401": {
            "description": "No autorizado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "get": {
        "summary": "Obtener lista de negocios",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "SUSPENDED"
              ]
            },
            "description": "Filtrar por estado"
          },
          {
            "in": "query",
            "name": "businessType",
            "schema": {
              "type": "string",
              "enum": [
                "PERSONA_NATURAL",
                "PERSONA_JURIDICA"
              ]
            },
            "description": "Filtrar por tipo de negocio"
          },
          {
            "in": "query",
            "name": "department",
            "schema": {
              "type": "string"
            },
            "description": "Filtrar por departamento"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Buscar por nombre, raz√≥n social o NIT"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "N√∫mero de p√°gina"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "N√∫mero de elementos por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de negocios obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessListResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/businesses/{id}": {
      "get": {
        "summary": "Obtener un negocio por ID",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Negocio obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "put": {
        "summary": "Actualizar un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Negocio actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "delete": {
        "summary": "Desactivar un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Negocio desactivado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Negocio desactivado exitosamente"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/businesses/{businessId}/products": {
      "post": {
        "summary": "Agregar producto a un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Producto agregado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "get": {
        "summary": "Obtener productos de un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Productos obtenidos exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/businesses/{businessId}/products/{productId}": {
      "put": {
        "summary": "Actualizar producto en un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Producto o negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "delete": {
        "summary": "Remover producto de un negocio",
        "tags": [
          "Business"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto removido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Producto o negocio no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart-items": {
      "get": {
        "summary": "Listar todos los √≠tems de carritos",
        "tags": [
          "CartItems"
        ],
        "responses": {
          "200": {
            "description": "Lista de √≠tems"
          }
        }
      },
      "post": {
        "summary": "Agregar producto al carrito",
        "tags": [
          "CartItems"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cart_id",
                  "product_id",
                  "quantity",
                  "price_at_time"
                ],
                "properties": {
                  "cart_id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "price_at_time": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "√çtem agregado"
          }
        }
      }
    },
    "/api/cart-items/{id}": {
      "get": {
        "summary": "Obtener √≠tem de carrito por ID",
        "tags": [
          "CartItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "√çtem encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar producto en carrito",
        "tags": [
          "CartItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer"
                  },
                  "price_at_time": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "√çtem actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar √≠tem del carrito",
        "tags": [
          "CartItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "√çtem eliminado"
          }
        }
      }
    },
    "/api/carts": {
      "get": {
        "summary": "Listar todos los carritos de compra",
        "tags": [
          "Carts"
        ],
        "responses": {
          "200": {
            "description": "Lista de carritos"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo carrito de compra",
        "tags": [
          "Carts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "customer_id"
                ],
                "properties": {
                  "customer_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Carrito creado"
          }
        }
      }
    },
    "/api/carts/{id}": {
      "get": {
        "summary": "Obtener carrito por ID",
        "tags": [
          "Carts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carrito encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar carrito",
        "tags": [
          "Carts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "customer_id"
                ],
                "properties": {
                  "customer_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Carrito actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar carrito",
        "tags": [
          "Carts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Carrito eliminado"
          }
        }
      }
    },
    "/api/businesses/{businessId}/cart": {
      "get": {
        "summary": "Obtener carrito activo",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del negocio"
          }
        ],
        "responses": {
          "200": {
            "description": "Carrito obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Carrito no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del negocio"
          }
        ],
        "responses": {
          "201": {
            "description": "Carrito creado exitosamente"
          },
          "401": {
            "description": "No autorizado"
          },
          "409": {
            "description": "Ya existe un carrito activo"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart/{cartId}/items": {
      "post": {
        "summary": "Agregar item al carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "productId",
                  "quantity"
                ],
                "properties": {
                  "productId": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item agregado exitosamente"
          },
          "400": {
            "description": "Datos inv√°lidos"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Carrito o producto no encontrado"
          },
          "409": {
            "description": "Stock insuficiente"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart/{cartId}/items/{productId}": {
      "put": {
        "summary": "Actualizar cantidad de item",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del producto"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cantidad actualizada exitosamente"
          },
          "400": {
            "description": "Datos inv√°lidos"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Item no encontrado"
          },
          "409": {
            "description": "Stock insuficiente"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "delete": {
        "summary": "Eliminar item del carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del producto"
          }
        ],
        "responses": {
          "204": {
            "description": "Item eliminado exitosamente"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Item no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart/{cartId}/clear": {
      "delete": {
        "summary": "Vaciar carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "responses": {
          "204": {
            "description": "Carrito vaciado exitosamente"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Carrito no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cart/{cartId}/total": {
      "get": {
        "summary": "Obtener total del carrito",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "responses": {
          "200": {
            "description": "Total obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Carrito no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/cash-register/open": {
      "post": {
        "summary": "Abre una nueva caja registradora",
        "tags": [
          "Cash Register"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashRegisterOpen"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Caja abierta exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CashRegisterSummary"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en los datos de entrada"
          },
          "401": {
            "description": "No autorizado"
          }
        }
      }
    },
    "/api/cash-register/{id}/close": {
      "post": {
        "summary": "Cierra una caja registradora",
        "tags": [
          "Cash Register"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la caja registradora"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashRegisterClose"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Caja cerrada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CashRegisterSummary"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en los datos de entrada"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Caja no encontrada"
          }
        }
      }
    },
    "/api/cash-register/{id}/summary": {
      "get": {
        "summary": "Obtiene el resumen de una caja registradora",
        "tags": [
          "Cash Register"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la caja registradora"
          }
        ],
        "responses": {
          "200": {
            "description": "Resumen de la caja",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CashRegisterSummary"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Caja no encontrada"
          }
        }
      }
    },
    "/api/cash-register": {
      "get": {
        "summary": "Lista las cajas registradoras del negocio",
        "tags": [
          "Cash Register"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "OPEN",
                "CLOSED",
                "SUSPENDED"
              ]
            },
            "description": "Filtrar por estado"
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "description": "Filtrar por usuario"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Fecha de inicio para filtrar"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Fecha de fin para filtrar"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "N√∫mero de p√°gina"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "L√≠mite de registros por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de cajas registradoras",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cashRegisters": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CashRegisterSummary"
                          }
                        },
                        "total": {
                          "type": "integer"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cash-register/current": {
      "get": {
        "summary": "Obtiene la caja abierta actual del usuario",
        "tags": [
          "Cash Register"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Caja actual abierta",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CashRegisterSummary"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No hay caja abierta"
          }
        }
      }
    },
    "/api/cash-register/{id}/adjust": {
      "put": {
        "summary": "Actualiza el monto actual de la caja",
        "tags": [
          "Cash Register"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la caja registradora"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "newAmount",
                  "reason"
                ],
                "properties": {
                  "newAmount": {
                    "type": "number",
                    "description": "Nuevo monto actual",
                    "example": 1200
                  },
                  "reason": {
                    "type": "string",
                    "description": "Raz√≥n del ajuste",
                    "example": "Ajuste por diferencia encontrada"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Monto actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CashRegisterSummary"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en los datos de entrada"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Caja no encontrada"
          }
        }
      }
    },
    "/api/cash-register/{id}/audit": {
      "get": {
        "summary": "Obtiene el historial de auditor√≠a de una caja",
        "tags": [
          "Cash Register"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la caja registradora"
          }
        ],
        "responses": {
          "200": {
            "description": "Historial de auditor√≠a",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "summary": "Listar todas las categor√≠as",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "Lista de categor√≠as",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear nueva categor√≠a",
        "tags": [
          "Categories"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Categor√≠a creada"
          },
          "400": {
            "description": "Categor√≠a duplicada"
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "summary": "Obtener categor√≠a por ID",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categor√≠a encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar categor√≠a",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Categor√≠a actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar categor√≠a",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Categor√≠a eliminada exitosamente"
          }
        }
      }
    },
    "/api/customers": {
      "get": {
        "summary": "Listar todos los clientes",
        "tags": [
          "Customers"
        ],
        "responses": {
          "200": {
            "description": "Lista de clientes"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo cliente",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cliente creado"
          },
          "400": {
            "description": "NIT o Email duplicado"
          }
        }
      }
    },
    "/api/customers/search": {
      "get": {
        "summary": "Filtrar clientes por documento",
        "description": "Filtra clientes por tipo y/o n√∫mero de documento (b√∫squeda parcial)",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "documentType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CI",
                "NIT",
                "PASSPORT",
                "FOREIGN_ID"
              ]
            },
            "description": "Tipo de documento (opcional)"
          },
          {
            "in": "query",
            "name": "documentNumber",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "N√∫mero de documento (b√∫squeda parcial, opcional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de clientes que coinciden con los filtros",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Al menos un filtro debe ser proporcionado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/customers/{id}": {
      "get": {
        "summary": "Obtener cliente por ID",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar cliente",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar cliente",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cliente eliminado exitosamente"
          }
        }
      }
    },
    "/api/employees": {
      "get": {
        "summary": "Obtener todos los empleados",
        "tags": [
          "Employees"
        ],
        "responses": {
          "200": {
            "description": "Lista de empleados"
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo empleado",
        "tags": [
          "Employees"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "first_name",
                  "start_date",
                  "status",
                  "gender",
                  "email",
                  "address",
                  "mobile_phone"
                ],
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "ON_LEAVE",
                      "TERMINATED"
                    ]
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "MALE",
                      "FEMALE",
                      "UNSPECIFIED"
                    ]
                  },
                  "birth_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "address": {
                    "type": "string"
                  },
                  "mobile_phone": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Empleado creado exitosamente"
          },
          "400": {
            "description": "Datos inv√°lidos"
          },
          "401": {
            "description": "No autorizado"
          },
          "409": {
            "description": "Email ya existe o usuario ya tiene empleado asociado"
          }
        }
      }
    },
    "/api/employees/{id}": {
      "get": {
        "summary": "Obtener un empleado por ID",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del empleado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar empleado por ID",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Empleado actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar empleado por ID",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/employees/user/{userId}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Obtener empleado por ID de usuario",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del empleado"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Empleado no encontrado"
          }
        }
      }
    },
    "/api/inventory/{businessId}/{productId}/stock": {
      "get": {
        "summary": "Obtener stock actual de un producto",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock actual del producto"
          }
        }
      }
    },
    "/api/inventory/{businessId}/low-stock": {
      "get": {
        "summary": "Obtener productos con stock bajo",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos con stock bajo"
          }
        }
      }
    },
    "/api/inventory/{businessId}/report": {
      "get": {
        "summary": "Generar reporte de inventario",
        "tags": [
          "Inventory"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reporte de inventario"
          }
        }
      }
    },
    "/api/permissions": {
      "get": {
        "summary": "Obtener todos los permisos",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de permisos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo permiso",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permiso creado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "400": {
            "description": "Error de validaci√≥n o datos inv√°lidos"
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "summary": "Obtener un permiso por ID",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permiso encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "404": {
            "description": "Permiso no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar un permiso existente",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permiso actualizado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "404": {
            "description": "Permiso no encontrado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar un permiso por ID",
        "tags": [
          "Permissions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Permiso eliminado correctamente"
          },
          "404": {
            "description": "Permiso no encontrado"
          }
        }
      }
    },
    "/api/pos/start-sale": {
      "post": {
        "summary": "Iniciar una nueva venta",
        "description": "Crea un nuevo carrito activo para comenzar una venta",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Venta iniciada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/pos/add-item": {
      "post": {
        "summary": "Agregar producto al carrito",
        "description": "Agrega un producto al carrito con validaci√≥n de stock",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cartId",
                  "productId",
                  "quantity"
                ],
                "properties": {
                  "cartId": {
                    "type": "integer",
                    "description": "ID del carrito"
                  },
                  "productId": {
                    "type": "integer",
                    "description": "ID del producto"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Cantidad a agregar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Producto agregado exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/pos/cart/{cartId}/item/{productId}": {
      "delete": {
        "summary": "Remover producto del carrito",
        "description": "Elimina un producto espec√≠fico del carrito",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del producto"
          }
        ],
        "responses": {
          "200": {
            "description": "Producto removido exitosamente"
          },
          "404": {
            "description": "Carrito o producto no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      },
      "put": {
        "summary": "Actualizar cantidad de un producto",
        "description": "Modifica la cantidad de un producto en el carrito",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del producto"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity"
                ],
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Nueva cantidad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cantidad actualizada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/pos/cart/{cartId}/summary": {
      "get": {
        "summary": "Obtener resumen de la venta actual",
        "description": "Retorna el resumen completo del carrito con productos y totales",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "responses": {
          "200": {
            "description": "Resumen obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Carrito no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/pos/cart/{cartId}/complete": {
      "post": {
        "summary": "Completar venta",
        "description": "Finaliza la venta, genera factura y actualiza inventario",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "paymentMethod"
                ],
                "properties": {
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "CASH",
                      "CREDIT_CARD",
                      "DEBIT_CARD",
                      "BANK_TRANSFER",
                      "MOBILE_PAYMENT"
                    ],
                    "description": "M√©todo de pago"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Notas adicionales"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta completada exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/pos/cart/{cartId}/cancel": {
      "post": {
        "summary": "Cancelar venta",
        "description": "Cancela la venta y marca el carrito como abandonado",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Raz√≥n de la cancelaci√≥n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta cancelada exitosamente"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/pos/search-products": {
      "get": {
        "summary": "Buscar productos",
        "description": "Busca productos por c√≥digo o nombre",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "T√©rmino de b√∫squeda (c√≥digo o nombre del producto)"
          }
        ],
        "responses": {
          "200": {
            "description": "Productos encontrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Query requerida"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/pos/quick-products": {
      "get": {
        "summary": "Obtener productos r√°pidos",
        "description": "Retorna los productos m√°s vendidos o frecuentes",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100
            },
            "description": "N√∫mero m√°ximo de productos a retornar"
          }
        ],
        "responses": {
          "200": {
            "description": "Productos r√°pidos obtenidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/pos/cart/{cartId}/assign-customer": {
      "post": {
        "summary": "Asignar cliente al carrito",
        "description": "Asigna un cliente al carrito para facturaci√≥n",
        "tags": [
          "POS"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del carrito"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "customerId"
                ],
                "properties": {
                  "customerId": {
                    "type": "integer",
                    "description": "ID del cliente a asignar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente asignado exitosamente"
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "summary": "Listar todos los productos",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Lista de productos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear nuevo producto",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Producto creado"
          },
          "400": {
            "description": "C√≥digo de barras duplicado"
          }
        }
      }
    },
    "/api/products/category/{categoryId}": {
      "get": {
        "summary": "Obtener productos por categor√≠a",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos filtrados por categor√≠a",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Categor√≠a no encontrada o sin productos"
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Obtener producto por ID",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar producto",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Producto actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar producto",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Producto eliminado"
          }
        }
      }
    },
    "/api/purchase-order-items": {
      "get": {
        "summary": "Listar todos los √≠tems de √≥rdenes de compra",
        "tags": [
          "PurchaseOrderItems"
        ],
        "responses": {
          "200": {
            "description": "Lista de √≠tems"
          }
        }
      },
      "post": {
        "summary": "Crear nuevo √≠tem en orden de compra",
        "tags": [
          "PurchaseOrderItems"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "√çtem creado"
          }
        }
      }
    },
    "/api/purchase-order-items/{id}": {
      "get": {
        "summary": "Obtener √≠tem de orden de compra por ID",
        "tags": [
          "PurchaseOrderItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "√çtem encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar √≠tem de orden de compra",
        "tags": [
          "PurchaseOrderItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "√çtem actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar √≠tem de orden de compra",
        "tags": [
          "PurchaseOrderItems"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado exitosamente"
          }
        }
      }
    },
    "/api/purchase-orders": {
      "get": {
        "summary": "Listar todas las √≥rdenes de compra",
        "tags": [
          "PurchaseOrders"
        ],
        "responses": {
          "200": {
            "description": "Lista de √≥rdenes de compra"
          }
        }
      },
      "post": {
        "summary": "Crear nueva orden de compra",
        "tags": [
          "PurchaseOrders"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Orden de compra creada"
          }
        }
      }
    },
    "/api/purchase-orders/{id}": {
      "get": {
        "summary": "Obtener orden de compra por ID",
        "tags": [
          "PurchaseOrders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orden de compra encontrada"
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualizar orden de compra",
        "tags": [
          "PurchaseOrders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Orden de compra actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar orden de compra",
        "tags": [
          "PurchaseOrders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Orden eliminada exitosamente"
          }
        }
      }
    },
    "/api/role-permissions": {
      "get": {
        "summary": "Listar todas las asignaciones de permisos a roles",
        "tags": [
          "RolePermissions"
        ],
        "responses": {
          "200": {
            "description": "Lista de asignaciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RolePermission"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear una nueva asignaci√≥n rol-permiso",
        "tags": [
          "RolePermissions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "roleId",
                  "permissionId"
                ],
                "properties": {
                  "roleId": {
                    "type": "integer",
                    "example": 1
                  },
                  "permissionId": {
                    "type": "integer",
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asignaci√≥n creada"
          }
        }
      }
    },
    "/api/role-permissions/{id}": {
      "get": {
        "summary": "Obtener una asignaci√≥n por ID",
        "tags": [
          "RolePermissions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asignaci√≥n encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RolePermission"
                }
              }
            }
          },
          "404": {
            "description": "No encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualizar una asignaci√≥n rol-permiso",
        "tags": [
          "RolePermissions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "roleId",
                  "permissionId"
                ],
                "properties": {
                  "roleId": {
                    "type": "integer"
                  },
                  "permissionId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asignaci√≥n actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar una asignaci√≥n rol-permiso",
        "tags": [
          "RolePermissions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado correctamente"
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "summary": "Obtener todos los roles",
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "Lista de roles"
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo rol",
        "tags": [
          "Roles"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rol creado"
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "summary": "Obtener un rol por ID",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rol encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar un rol",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rol actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar un rol",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Eliminado"
          }
        }
      }
    },
    "/api/sale-items": {
      "get": {
        "summary": "Listar todos los √≠tems de venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de √≠tems de venta",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo √≠tem de venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "saleId",
                  "productId",
                  "quantity",
                  "unitPrice"
                ],
                "properties": {
                  "saleId": {
                    "type": "integer"
                  },
                  "productId": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer"
                  },
                  "unitPrice": {
                    "type": "number"
                  },
                  "taxRate": {
                    "type": "number",
                    "default": 13
                  },
                  "discountAmount": {
                    "type": "number",
                    "default": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "√çtem de venta creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/sale-items/{id}": {
      "get": {
        "summary": "Obtener √≠tem de venta por ID",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "√çtem de venta encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItem"
                }
              }
            }
          },
          "404": {
            "description": "√çtem de venta no encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar √≠tem de venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer"
                  },
                  "unit_price": {
                    "type": "number"
                  },
                  "tax_rate": {
                    "type": "number"
                  },
                  "discount_amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "√çtem de venta actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Eliminar √≠tem de venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "√çtem de venta eliminado exitosamente"
          }
        }
      }
    },
    "/api/sale-items/sale/{saleId}": {
      "get": {
        "summary": "Obtener √≠tems de venta por venta",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "saleId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de √≠tems de la venta"
          }
        }
      }
    },
    "/api/sale-items/product/{productId}": {
      "get": {
        "summary": "Obtener √≠tems de venta por producto",
        "tags": [
          "SaleItems"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de √≠tems del producto"
          }
        }
      }
    },
    "/api/sales": {
      "get": {
        "summary": "Listar todas las ventas",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sale"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear una nueva venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "business_id",
                  "cart_id",
                  "user_id",
                  "payment_method"
                ],
                "properties": {
                  "business_id": {
                    "type": "integer"
                  },
                  "cart_id": {
                    "type": "integer"
                  },
                  "user_id": {
                    "type": "integer"
                  },
                  "customer_id": {
                    "type": "integer"
                  },
                  "payment_method": {
                    "type": "string",
                    "enum": [
                      "CASH",
                      "CREDIT_CARD",
                      "DEBIT_CARD",
                      "BANK_TRANSFER",
                      "MOBILE_PAYMENT",
                      "GIFT_CARD",
                      "LOYALTY_POINTS",
                      "QR_PAYMENT",
                      "ELECTRONIC_WALLET"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venta creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          }
        }
      }
    },
    "/api/sales/{id}": {
      "get": {
        "summary": "Obtener venta por ID",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venta encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          },
          "404": {
            "description": "Venta no encontrada"
          }
        }
      },
      "put": {
        "summary": "Actualizar venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "PENDING",
                      "COMPLETED",
                      "CANCELLED",
                      "REFUNDED",
                      "PARTIALLY_REFUNDED"
                    ]
                  },
                  "payment_status": {
                    "type": "string",
                    "enum": [
                      "PENDING",
                      "PAID",
                      "FAILED",
                      "REFUNDED",
                      "PARTIALLY_REFUNDED"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta actualizada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Eliminar venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Venta eliminada exitosamente"
          }
        }
      }
    },
    "/api/sales/business/{businessId}": {
      "get": {
        "summary": "Obtener ventas por negocio",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "businessId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas del negocio"
          }
        }
      }
    },
    "/api/sales/customer/{customerId}": {
      "get": {
        "summary": "Obtener ventas por cliente",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas del cliente"
          }
        }
      }
    },
    "/api/sales/date-range": {
      "get": {
        "summary": "Obtener ventas por rango de fechas",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "businessId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ventas en el rango de fechas"
          }
        }
      }
    },
    "/api/sales/process": {
      "post": {
        "summary": "Procesar venta desde carrito",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "cartId",
                  "paymentMethod"
                ],
                "properties": {
                  "cartId": {
                    "type": "integer"
                  },
                  "customerId": {
                    "type": "integer"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "CASH",
                      "CREDIT_CARD",
                      "DEBIT_CARD",
                      "BANK_TRANSFER",
                      "MOBILE_PAYMENT",
                      "GIFT_CARD",
                      "LOYALTY_POINTS",
                      "QR_PAYMENT",
                      "ELECTRONIC_WALLET"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venta procesada exitosamente"
          }
        }
      }
    },
    "/api/sales/{id}/cancel": {
      "post": {
        "summary": "Cancelar venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta cancelada exitosamente"
          }
        }
      }
    },
    "/api/sales/{id}/refund": {
      "post": {
        "summary": "Reembolsar venta",
        "tags": [
          "Sales"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "reason"
                ],
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reembolso procesado exitosamente"
          }
        }
      }
    },
    "/api/supplier-debts": {
      "get": {
        "summary": "Listar todas las deudas a proveedores",
        "tags": [
          "SupplierDebts"
        ],
        "responses": {
          "200": {
            "description": "Lista de deudas"
          }
        }
      },
      "post": {
        "summary": "Crear nueva deuda a proveedor",
        "tags": [
          "SupplierDebts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierDebt"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deuda registrada"
          }
        }
      }
    },
    "/api/supplier-debts/{id}": {
      "get": {
        "summary": "Obtener deuda de proveedor por ID",
        "tags": [
          "SupplierDebts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deuda encontrada"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar saldo restante de deuda",
        "tags": [
          "SupplierDebts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remaining_amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deuda actualizada"
          }
        }
      },
      "delete": {
        "summary": "Eliminar deuda de proveedor",
        "tags": [
          "SupplierDebts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deuda eliminada"
          }
        }
      }
    },
    "/api/suppliers": {
      "get": {
        "summary": "Listar todos los proveedores",
        "tags": [
          "Suppliers"
        ],
        "responses": {
          "200": {
            "description": "Lista de proveedores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crear nuevo proveedor",
        "tags": [
          "Suppliers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Proveedor creado"
          },
          "400": {
            "description": "NIT duplicado"
          }
        }
      }
    },
    "/api/suppliers/{id}": {
      "get": {
        "summary": "Obtener proveedor por ID",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Proveedor encontrado"
          },
          "404": {
            "description": "No encontrado"
          }
        }
      },
      "put": {
        "summary": "Actualizar proveedor",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Proveedor actualizado"
          }
        }
      },
      "delete": {
        "summary": "Eliminar proveedor",
        "tags": [
          "Suppliers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Proveedor eliminado"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "summary": "Crear un nuevo usuario",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuario creado exitosamente"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv√°lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserError"
                }
              }
            }
          },
          "409": {
            "description": "Usuario ya existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserError"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "get": {
        "summary": "Obtener lista de usuarios",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "SUSPENDED",
                "PENDING_VERIFICATION"
              ]
            },
            "description": "Filtrar por estado del usuario"
          },
          {
            "in": "query",
            "name": "roleId",
            "schema": {
              "type": "integer"
            },
            "description": "Filtrar por ID del rol"
          },
          {
            "in": "query",
            "name": "businessId",
            "schema": {
              "type": "integer"
            },
            "description": "Filtrar por ID del negocio"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Buscar por username o nombre de empleado"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "N√∫mero de p√°gina"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "N√∫mero de elementos por p√°gina"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuarios obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/users/stats": {
      "get": {
        "summary": "Obtener estad√≠sticas de usuarios",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Estad√≠sticas obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {
                      "$ref": "#/components/schemas/UserStats"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/users/check-username/{username}": {
      "get": {
        "summary": "Verificar disponibilidad de username",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Username a verificar"
          },
          {
            "in": "query",
            "name": "excludeId",
            "schema": {
              "type": "integer"
            },
            "description": "ID de usuario a excluir de la verificaci√≥n"
          }
        ],
        "responses": {
          "200": {
            "description": "Verificaci√≥n completada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "available": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Username requerido"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/users/username/{username}": {
      "get": {
        "summary": "Obtener usuario por username",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Username del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserError"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Obtener perfil del usuario actual",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Perfil del usuario actual",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autenticado"
          },
          "404": {
            "description": "Usuario no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Obtener usuario por ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserError"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "summary": "Actualizar usuario",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del usuario"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuario actualizado exitosamente"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserError"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "summary": "Eliminar usuario (soft delete)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del usuario"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuario eliminado exitosamente"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserError"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/users/{id}/change-password": {
      "post": {
        "summary": "Cambiar contrase√±a del usuario",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del usuario"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contrase√±a cambiada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contrase√±a cambiada exitosamente"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Contrase√±a actual incorrecta",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserError"
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/users/{id}/reset-password": {
      "post": {
        "summary": "Resetear contrase√±a del usuario (solo administradores)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del usuario"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetUserPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contrase√±a reseteada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contrase√±a reseteada exitosamente"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    }
  }
}